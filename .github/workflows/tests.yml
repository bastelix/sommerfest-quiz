name: Tests

on:
  pull_request:
  push:
    branches: [ "main" ]

jobs:
    tests:
        name: Tests PHP ${{ matrix.php }}
        runs-on: ubuntu-latest
        continue-on-error: ${{ matrix.experimental }}
        services:
            postgres:
                image: postgres:16
                env:
                    POSTGRES_DB: quiz
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd "pg_isready -U postgres -d quiz"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        strategy:
            fail-fast: false
            matrix:
                php: [8.2]
                experimental: [false]
                include:
                    - php: 8.2
                      analysis: true

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Download Noto Sans Bold font
              run: |
                  mkdir -p resources/fonts
                  curl -L -o resources/fonts/NotoSans-Bold.ttf https://github.com/googlefonts/noto-fonts/raw/main/hinted/ttf/NotoSans/NotoSans-Bold.ttf

            - name: Set up PHP ${{ matrix.php }}
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: xdebug
                  extensions: pdo_pgsql

            - name: Configure Composer allow-plugins
              run: composer config allow-plugins.phpstan/extension-installer true

            - name: Install dependencies with Composer
              uses: ramsey/composer-install@1919f6c305aea6ab10e6181a8ddf72317ad77e0e

            - name: Run database migrations
              env:
                  POSTGRES_DSN: pgsql:host=127.0.0.1;port=5432;dbname=quiz
                  POSTGRES_USER: postgres
                  POSTGRES_PASSWORD: postgres
              run: php scripts/run_migrations.php

            - name: Debug Composer
              run: composer show --all

            - name: Ensure vendor/bin Exists
              run: ls -la vendor/bin

            - name: Coding standards
              if: matrix.analysis
              run: vendor/bin/phpcs

            - name: Static analysis
              if: matrix.analysis
              run: vendor/bin/phpstan

            - name: Tests
              run: vendor/bin/phpunit --coverage-clover clover.xml

            - name: Upload coverage results to Coveralls
              if: matrix.analysis
              env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  composer require php-coveralls/php-coveralls -n -W
                  vendor/bin/php-coveralls --coverage_clover=clover.xml -v
