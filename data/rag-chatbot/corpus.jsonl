{"id": "README:0000", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 0, "word_count": 145, "text": "QuizRace -------- Deploy HTML Validity Test Dokumentation ------------- Die ausführliche Anleitung findest du auf GitHub Pages: Dokumentation lokal bauen ------------------------- - Abhängigkeiten installieren: - Dokumentation anzeigen: Danach ist sie unter erreichbar. Deployment ---------- Änderungen an der Dokumentation werden automatisch über GitHub Pages veröffentlicht, sobald sie auf den main-Branch gepusht werden. Das **QuizRace** ist eine sofort einsetzbare Web-App, mit der Sie Besucherinnen und Besucher spielerisch an Events beteiligen. Dank Slim Framework und UIkit3 funktioniert alles ohne komplizierte Server-Setups direkt im Browser. Disclaimer / Hinweis -------------------- Die Sommerfeier 2025 Quiz-App ist das Ergebnis einer spannenden Zusammenarbeit zwischen menschlicher Erfahrung und künstlicher Intelligenz. Während Ideen, Organisation und jede Menge Praxiswissen von Menschen stammen, wurden alle Codezeilen experimentell komplett von OpenAI Codex geschrieben. Für die kreativen Konzepte und Inhalte kam ChatGPT 4.1 zum Einsatz, bei der Fehlersuche half GitHub Copilot und das Logo wurde von der KI Sora entworfen."}
{"id": "README:0001", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 1, "word_count": 172, "text": "Menge Praxiswissen von Menschen stammen, wurden alle Codezeilen experimentell komplett von OpenAI Codex geschrieben. Für die kreativen Konzepte und Inhalte kam ChatGPT 4.1 zum Einsatz, bei der Fehlersuche half GitHub Copilot und das Logo wurde von der KI Sora entworfen. Diese App wurde im Rahmen einer Machbarkeitsstudie entwickelt, um das Potenzial moderner Codeassistenten in der Praxis zu erproben. Im Mittelpunkt stand die Zugänglichkeit für alle Nutzergruppen – daher ist die Anwendung barrierefrei gestaltet und eignet sich auch für Menschen mit Einschränkungen. Datenschutz und Sicherheit werden konsequent beachtet, sodass alle Daten geschützt sind. Die App zeichnet sich durch eine hohe Performance und Stabilität auch bei vielen gleichzeitigen Teilnehmenden aus. Das Bedienkonzept ist selbsterklärend, wodurch eine schnelle und intuitive Nutzung auf allen Endgeräten – ob Smartphone, Tablet oder Desktop – gewährleistet wird. Zudem wurde auf eine ressourcenschonende Arbeitsweise und eine unkomplizierte Anbindung an andere Systeme Wert gelegt. Mit dieser App zeigen wir, was heute schon möglich ist, wenn Menschen und verschiedene KI-Tools wie ChatGPT, Codex, Copilot und Sora gemeinsam an neuen digitalen Ideen tüfteln."}
{"id": "README:0002", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 2, "word_count": 124, "text": "auf eine ressourcenschonende Arbeitsweise und eine unkomplizierte Anbindung an andere Systeme Wert gelegt. Mit dieser App zeigen wir, was heute schon möglich ist, wenn Menschen und verschiedene KI-Tools wie ChatGPT, Codex, Copilot und Sora gemeinsam an neuen digitalen Ideen tüfteln. Überblick --------- - **Flexibel einsetzbar**: Fragenkataloge im JSON-Format lassen sich bequem austauschen oder erweitern. - **Sechs Fragetypen**: Sortieren, Zuordnen, Multiple Choice, Swipe-Karten, Foto mit Texteingabe und \"Hätten Sie es gewusst?\"-Karten bieten Abwechslung f\\u00fcr jede Zielgruppe. - **QR-Code-Login & Dunkelmodus**: Optionaler QR-Code-Login für schnelles Anmelden und ein dunkles Design, das sich automatisch der Systemeinstellung anpasst oder manuell umgeschaltet werden kann, steigern den Komfort. - **Persistente Speicherung**: Konfigurationen, Kataloge und Ergebnisse liegen in einer PostgreSQL-Datenbank. - **Mandantenverwaltung**: Tenant-Daten werden über PostgreSQL-Schemata isoliert; SQLite wird nicht unterstützt."}
{"id": "README:0003", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 3, "word_count": 131, "text": "und ein dunkles Design, das sich automatisch der Systemeinstellung anpasst oder manuell umgeschaltet werden kann, steigern den Komfort. - **Persistente Speicherung**: Konfigurationen, Kataloge und Ergebnisse liegen in einer PostgreSQL-Datenbank. - **Mandantenverwaltung**: Tenant-Daten werden über PostgreSQL-Schemata isoliert; SQLite wird nicht unterstützt. Highlights ---------- - **Einfache Installation**: Nur Composer-Abhängigkeiten installieren und einen PHP-Server starten. - **Intuitives UI**: Komplett auf UIkit3 basierendes Frontend mit flüssigen Animationen und responsive Design. - **Stark anpassbar**: Farben, Logo und Texte werden in der Datenbank gespeichert und können über die Administrationsoberfläche angepasst werden. - **Backup per JSON**: Alle Daten lassen sich exportieren und wieder importieren. - **Automatische Bildkompression**: Hochgeladene Fotos werden nun standardmäßig verkleinert und komprimiert. - **Rätselwort und Foto-Einwilligung**: Optionales Puzzlewort-Spiel mit DSGVO-konformen Foto-Uploads. - **Kostenloser Testzeitraum**: Neue Stripe-Abonnements starten mit einer 7-tägigen Testphase. Fokus der Entwicklung ---------------------"}
{"id": "README:0004", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 4, "word_count": 142, "text": "lassen sich exportieren und wieder importieren. - **Automatische Bildkompression**: Hochgeladene Fotos werden nun standardmäßig verkleinert und komprimiert. - **Rätselwort und Foto-Einwilligung**: Optionales Puzzlewort-Spiel mit DSGVO-konformen Foto-Uploads. - **Kostenloser Testzeitraum**: Neue Stripe-Abonnements starten mit einer 7-tägigen Testphase. Fokus der Entwicklung --------------------- Bei der Erstellung dieser Anwendung standen besonders folgende Punkte im Mittelpunkt: - **Barrierefreiheit**: Die App ist für alle zugänglich, auch für Menschen mit Einschränkungen. - **Datenschutz**: Die Daten sind sicher und werden vertraulich behandelt. - **Schnelle und stabile Nutzung**: Auch bei vielen Teilnehmenden läuft die App zuverlässig. - **Einfache Bedienung**: Die Nutzung ist leicht und selbsterklärend. - **Geräteunabhängigkeit**: Funktioniert auf allen Geräten: Handy, Tablet oder PC – freie Wahl. - **Nachhaltigkeit**: Die Umsetzung ist ressourcenschonend gestaltet. - **Offene Schnittstellen**: Die App lässt sich problemlos mit anderen Systemen verbinden. Dieses Projekt zeigt, wie Mensch und KI zusammen ganz neue digitale Möglichkeiten schaffen können."}
{"id": "README:0005", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 5, "word_count": 132, "text": "Handy, Tablet oder PC – freie Wahl. - **Nachhaltigkeit**: Die Umsetzung ist ressourcenschonend gestaltet. - **Offene Schnittstellen**: Die App lässt sich problemlos mit anderen Systemen verbinden. Dieses Projekt zeigt, wie Mensch und KI zusammen ganz neue digitale Möglichkeiten schaffen können. Projektstruktur --------------- - **public/** – Einstiegspunkt index.php, alle UIkit-Assets sowie JavaScript-Dateien - **templates/** – Twig-Vorlagen für Startseite und FAQ - **data/kataloge/** – Fragenkataloge im JSON-Format - **tenants**-Tabelle – Profildaten für die Main-Umgebung - **src/** – PHP-Code mit Routen, Controllern und Services - **docs/** – Zusätzliche Dokumentation, z.B. Richtlinien zur Worttrennung - Theme-Strategie --------------- Der Wechsel zwischen hellem und dunklem Design erfolgt über das data-theme-Attribut auf dem -Element. CSS-Regeln greifen auf [data-theme=\"dark\"], während JavaScript den Wert (light oder dark) setzt und in localStorage speichert. Klassen wie dark-mode werden nicht mehr verwendet. Schnellstart ------------"}
{"id": "README:0006", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 6, "word_count": 180, "text": "--------------- Der Wechsel zwischen hellem und dunklem Design erfolgt über das data-theme-Attribut auf dem -Element. CSS-Regeln greifen auf [data-theme=\"dark\"], während JavaScript den Wert (light oder dark) setzt und in localStorage speichert. Klassen wie dark-mode werden nicht mehr verwendet. Schnellstart ------------ Stelle sicher, dass PHP 8.2 oder höher installiert ist: - Abhängigkeiten installieren: Beim ersten Aufruf legt Composer eine composer.lock an und lädt alle benötigten Pakete herunter. Die Datei wird bewusst nicht versioniert, sodass stets die neuesten kompatiblen Abhängigkeiten installiert werden. Wer die Anwendung ohne Docker betreibt, muss diesen Schritt manuell ausführen. Fehlt das Verzeichnis vendor/, zeigt die App eine entsprechende Fehlermeldung an. Das Docker-Setup installiert dabei automatisch die PHP-Erweiterungen *gd* und *pdo_pgsql*. Ersteres benötigt die Bibliothek setasign/fpdf, letzteres stellt die Verbindung zu PostgreSQL her. Wer die Anwendung ohne Docker betreibt, muss *pdo_pgsql* manuell aktivieren, damit die Datenbankanbindung funktioniert. Wurden neue Pakete in composer.json eingetragen, sollte anschließend composer update --lock ausgeführt werden, um die composer.lock zu aktualisieren. Andernfalls bricht der Docker-Build mit Hinweis auf eine veraltete Lock-Datei ab. Eine Aktualisierung der composer.lock kann alternativ über den GitHub-Workflow **Manual Composer Install** erfolgen"}
{"id": "README:0007", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 7, "word_count": 82, "text": "Pakete in composer.json eingetragen, sollte anschließend composer update --lock ausgeführt werden, um die composer.lock zu aktualisieren. Andernfalls bricht der Docker-Build mit Hinweis auf eine veraltete Lock-Datei ab. Eine Aktualisierung der composer.lock kann alternativ über den GitHub-Workflow **Manual Composer Install** erfolgen (siehe .github/workflows/composer-install.yml). Dieser lässt sich im Reiter **Actions** über den Button „Run workflow“ manuell starten und committet bei Bedarf die aktualisierte Datei. - Server starten (z.B. für lokale Tests): Anschließend ist das Quiz unter aufrufbar. - Optional: Tabellen in einer PostgreSQL-Datenbank anlegen:"}
{"id": "README:0008", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 8, "word_count": 144, "text": "Dieser lässt sich im Reiter **Actions** über den Button „Run workflow“ manuell starten und committet bei Bedarf die aktualisierte Datei. - Server starten (z.B. für lokale Tests): Anschließend ist das Quiz unter aufrufbar. - Optional: Tabellen in einer PostgreSQL-Datenbank anlegen: Alternativ lassen sich Schema- und Datenimport direkt im Docker-Container ausführen: Für noch bequemere Einrichtung steht das Skript scripts/run_psql_in_docker.sh bereit. Es ruft denselben Befehl auf und übernimmt die Variablen aus .env: - Wer Docker nicht nutzt, sollte im Anschluss die Migrationen ausführen, um notwendige Tabellen wie tenants anzulegen und spätere Änderungen zu übernehmen: - Anschließend einmalig die vorhandenen JSON-Daten importieren: Beispielbenutzer lassen sich mithilfe des Skripts anlegen. Es erstellt einen Benutzer pro Rolle, wobei Benutzername und Passwort jeweils dem Rollennamen entsprechen: - admin – Administrator - catalog-editor – Fragenkataloge bearbeiten - event-manager – Veranstaltungen verwalten - analyst – Ergebnisse analysieren - team-manager – Teams verwalten"}
{"id": "README:0009", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 9, "word_count": 158, "text": "Skripts anlegen. Es erstellt einen Benutzer pro Rolle, wobei Benutzername und Passwort jeweils dem Rollennamen entsprechen: - admin – Administrator - catalog-editor – Fragenkataloge bearbeiten - event-manager – Veranstaltungen verwalten - analyst – Ergebnisse analysieren - team-manager – Teams verwalten Der Erstimport legt nur die erforderlichen Rollen an. Ein Admin-Benutzer wird bereits beim ersten Start mit zufälligem Passwort angelegt. Dieses Passwort wird mandantenspezifisch unter /var/www/data//admin_password.txt gespeichert und sollte im Onboarding durch ein eigenes Passwort ersetzt werden. Jede Instanz benötigt eine eigene Umgebungsvariable TENANT_ID. Wird POSTGRES_DSN gesetzt und enthält das Verzeichnis data/ bereits JSON-Dateien, legt das Entrypoint-Skript des Containers die Tabellen automatisch an und importiert die Daten beim Start. Direkt danach werden alle Migrationen ausgeführt, sodass neue Spalten sofort verfügbar sind. Testing ------- Die automatisierten Tests werden mit PHPUnit ausgeführt. Ist keine Umgebung POSTGRES_DSN gesetzt, erstellt der Test-Harness eine gemeinsam genutzte SQLite-Datenbank im Speicher und wendet alle Migrationen automatisch an. So können die Tests ohne lokale PostgreSQL-Instanz gestartet werden."}
{"id": "README:0010", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 10, "word_count": 71, "text": "verfügbar sind. Testing ------- Die automatisierten Tests werden mit PHPUnit ausgeführt. Ist keine Umgebung POSTGRES_DSN gesetzt, erstellt der Test-Harness eine gemeinsam genutzte SQLite-Datenbank im Speicher und wendet alle Migrationen automatisch an. So können die Tests ohne lokale PostgreSQL-Instanz gestartet werden. Wer die Tests gegen PostgreSQL ausführen möchte, setzt POSTGRES_DSN, POSTGRES_USER und POSTGRES_PASSWORD auf die gewünschten Verbindungsdaten. Alternativ lässt sich über Tests\\TestCase::setDatabase() eine eigene PDO-Instanz einspeisen. Tests starten mit: Docker Compose --------------"}
{"id": "README:0011", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 11, "word_count": 179, "text": "So können die Tests ohne lokale PostgreSQL-Instanz gestartet werden. Wer die Tests gegen PostgreSQL ausführen möchte, setzt POSTGRES_DSN, POSTGRES_USER und POSTGRES_PASSWORD auf die gewünschten Verbindungsdaten. Alternativ lässt sich über Tests\\TestCase::setDatabase() eine eigene PDO-Instanz einspeisen. Tests starten mit: Docker Compose -------------- Das mitgelieferte docker-compose.yml startet das Quiz samt Reverse Proxy. Der integrierte PHP-Webserver hört auf Port 8080, der im Docker-Image freigegeben ist. Ein kleiner Zusatzcontainer (nginx-reloader) ermöglicht einen geschützten Reload des Proxys per Webhook. Dieser Container enthält nun das Docker-CLI, um den Proxy direkt neu laden zu können. Alternativ kann jede beliebige URL über die Variable NGINX_RELOADER_URL hinterlegt werden. Wird dieser Webhook genutzt, sollte NGINX_RELOAD auf 0 stehen, damit keine Docker-Befehle ausgeführt werden. Das dafür notwendige Token wird über die Datei .env als NGINX_RELOAD_TOKEN definiert und sowohl an die Anwendung als auch an den Reloader-Container weitergereicht. Die mitgelieferte Beispielkonfiguration ist bereits entsprechend vorbereitet und nutzt standardmäßig http://nginx-reloader:8080/reload bei deaktiviertem NGINX_RELOAD. Sollte der automatische Reload scheitern, bricht scripts/create_tenant.sh mit einer Fehlermeldung ab. In diesem Fall lässt sich der Proxy manuell neu laden: Zur Fehlersuche helfen die Logs des Proxy- oder Reloader-Containers:"}
{"id": "README:0012", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 12, "word_count": 158, "text": "bereits entsprechend vorbereitet und nutzt standardmäßig http://nginx-reloader:8080/reload bei deaktiviertem NGINX_RELOAD. Sollte der automatische Reload scheitern, bricht scripts/create_tenant.sh mit einer Fehlermeldung ab. In diesem Fall lässt sich der Proxy manuell neu laden: Zur Fehlersuche helfen die Logs des Proxy- oder Reloader-Containers: Anschließend kann das Skript erneut aufgerufen werden. Zertifikate und Konfigurationen werden komplett in benannten Volumes gespeichert. Dadurch bleiben alle Daten auch nach docker compose down erhalten und es sind keine manuellen Ordner erforderlich. Zusätzlich läuft ein Adminer-Container, der die PostgreSQL-Datenbank über die Subdomain https://adminer.${DOMAIN} bereitstellt. Er nutzt intern den Hostnamen postgres und erfordert keine weiteren Einstellungen. Um größere Uploads zu erlauben, wird die maximale Request-Größe des Reverse Proxys über eine Datei in vhost.d/ konfiguriert. Kopiere das Beispiel vhost.d/example.com und passe den Wert client_max_body_size an deine Domain an. Nach dem Ändern genügt docker compose restart docker-gen, damit nginx die Einstellung übernimmt. Die optionale Variable CLIENT_MAX_BODY_SIZE in .env liefert dabei nur einen Standardwert für Skripte wie scripts/create_tenant.sh. Zum Start genügt:"}
{"id": "README:0013", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 13, "word_count": 140, "text": "und passe den Wert client_max_body_size an deine Domain an. Nach dem Ändern genügt docker compose restart docker-gen, damit nginx die Einstellung übernimmt. Die optionale Variable CLIENT_MAX_BODY_SIZE in .env liefert dabei nur einen Standardwert für Skripte wie scripts/create_tenant.sh. Zum Start genügt: Die Datei setzt COMPOSE_PROJECT_NAME=sommerfest-quiz, damit Docker Compose vorhandene Container und Volumes bei späteren Deployments wiederverwendet. Falls der Reverse Proxy das Docker-Netzwerk noch nicht kennt, lege es vorher an: Der Name des Netzwerks lässt sich über die Umgebungsvariable NETWORK anpassen. Beenden lässt sich der Stack mit: Die Volumes bleiben dabei erhalten. Beim Einsatz des integrierten Proxy-Stacks (nginx, docker-gen und acme-companion) greift der Wert nur, solange keine eigene Vhost-Konfiguration vorliegt. Soll ein höheres Limit dauerhaft gelten, lege im Verzeichnis vhost.d/ eine Datei an. Nach dem Anpassen genügt ein Neustart des Containers docker-gen (z.B. docker compose restart docker-gen), damit nginx die Einstellung übernimmt."}
{"id": "README:0014", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 14, "word_count": 178, "text": "der Wert nur, solange keine eigene Vhost-Konfiguration vorliegt. Soll ein höheres Limit dauerhaft gelten, lege im Verzeichnis vhost.d/ eine Datei an. Nach dem Anpassen genügt ein Neustart des Containers docker-gen (z.B. docker compose restart docker-gen), damit nginx die Einstellung übernimmt. Werte upload_max_filesize und post_max_size angepasst werden. Dafür liegt im Verzeichnis config/ eine kleine php.ini bereit. Sie wird beim Bauen des Docker-Images nach /usr/local/etc/php/conf.d/custom.ini kopiert und automatisch geladen. Das docker-compose.yml bindet dieselbe Datei als Volume ein, sodass Änderungen ohne erneutes Bauen wirksam werden. Die verwendete Domain wird aus der Datei .env gelesen (Variablen DOMAIN oder MAIN_DOMAIN). Beim Start des Containers installiert ein Entrypoint-Skript automatisch alle Composer-Abhängigkeiten, sofern das Verzeichnis vendor/ noch nicht existiert. Ein vorheriges composer install ist somit nicht mehr erforderlich, solange die App innerhalb des Docker-Setups gestartet wird. Ist in der .env die Variable POSTGRES_DSN gesetzt, legt das Entrypoint- Skript beim Start automatisch die Datenbank anhand von docs/schema.sql an und importiert die vorhandenen JSON-Daten. Danach werden die Migrationen einmalig ausgeführt. Neben POSTGRES_DSN werden dafür auch POSTGRES_USER, POSTGRES_PASSWORD und POSTGRES_DB ausgewertet (zur Kompatibilität wird auch POSTGRES_PASS noch unterstützt)."}
{"id": "README:0015", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 15, "word_count": 155, "text": "das Entrypoint- Skript beim Start automatisch die Datenbank anhand von docs/schema.sql an und importiert die vorhandenen JSON-Daten. Danach werden die Migrationen einmalig ausgeführt. Neben POSTGRES_DSN werden dafür auch POSTGRES_USER, POSTGRES_PASSWORD und POSTGRES_DB ausgewertet (zur Kompatibilität wird auch POSTGRES_PASS noch unterstützt). Bildgrößen anpassen ------------------- Damit hochgeladene Dateien nicht unnötig groß werden, ist die Bibliothek Intervention Image fest eingebunden. Die Controller verkleinern Bilder automatisch auf eine maximale Kantenlänge von 1500&nbsp;Pixeln (Beweisfotos) beziehungsweise 512&nbsp;Pixeln (Logo) und speichern sie mit 70–80&nbsp;% Qualität im JPEG-Format. Fotos werden nach Möglichkeit anhand ihrer EXIF-Daten gedreht, sofern die PHP-Installation diese Funktion unterstützt. **Wichtig:** Die automatische Drehung funktioniert nur, wenn die PHP-Erweiterung exif installiert und aktiviert ist. Den Status prüfst du mit: Die Anwendung lädt beim Start eine vorhandene .env-Datei ein, auch wenn sie ohne Docker betrieben wird. Ist DOMAIN oder MAIN_DOMAIN dort gesetzt, werden für QR-Codes und Exportlinks diese Adressen verwendet. Enthält die Variable kein Schema, wird standardmäßig https:// vorangestellt. Multi-Tenant Setup ------------------"}
{"id": "README:0016", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 16, "word_count": 126, "text": "lädt beim Start eine vorhandene .env-Datei ein, auch wenn sie ohne Docker betrieben wird. Ist DOMAIN oder MAIN_DOMAIN dort gesetzt, werden für QR-Codes und Exportlinks diese Adressen verwendet. Enthält die Variable kein Schema, wird standardmäßig https:// vorangestellt. Multi-Tenant Setup ------------------ Mehrere Subdomains lassen sich als eigene Mandanten betreiben. Das Verzeichnis für die Compose-Dateien der Mandanten lässt sich über die Variable TENANTS_DIR steuern (Standard: tenants/). Ein neuer Mandant wird mit scripts/create_tenant.sh angelegt: Das Skript sendet einen API-Aufruf an /tenants, legt die Datei vhost.d/foo.$DOMAIN an und lädt anschließend den Proxy neu. Zum Entfernen eines Mandanten steht scripts/delete_tenant.sh bereit: Beide Skripte lesen die Variable DOMAIN aus .env und nutzen sie für die vhost-Konfiguration. Befindet sich im Projektverzeichnis eine .env, lädt scripts/onboard_tenant.sh sie automatisch und übernimmt die dort definierten Variablen."}
{"id": "README:0017", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 17, "word_count": 106, "text": "den Proxy neu. Zum Entfernen eines Mandanten steht scripts/delete_tenant.sh bereit: Beide Skripte lesen die Variable DOMAIN aus .env und nutzen sie für die vhost-Konfiguration. Befindet sich im Projektverzeichnis eine .env, lädt scripts/onboard_tenant.sh sie automatisch und übernimmt die dort definierten Variablen. Das Proxy-Setup legt zudem standardmäßig ein Docker-Netzwerk namens webproxy an. Nach dem Aufruf von scripts/create_tenant.sh oder einem POST /tenants muss das Onboarding angestoßen werden, damit der neue Mandant diesem Netzwerk beitritt und ein Let's-Encrypt-Zertifikat erhält. Starte dazu den Web-Assistenten unter /onboarding oder führe scripts/onboard_tenant.sh aus. Stelle sicher, dass dein Haupt-Stack dieses Netzwerk erstellt oder verwaltet. Den Namen kannst du über die Umgebungsvariable NETWORK im Skript anpassen."}
{"id": "README:0018", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 18, "word_count": 177, "text": "neue Mandant diesem Netzwerk beitritt und ein Let's-Encrypt-Zertifikat erhält. Starte dazu den Web-Assistenten unter /onboarding oder führe scripts/onboard_tenant.sh aus. Stelle sicher, dass dein Haupt-Stack dieses Netzwerk erstellt oder verwaltet. Den Namen kannst du über die Umgebungsvariable NETWORK im Skript anpassen. Das Skript scripts/onboard_tenant.sh steht weiterhin zur Verfügung, um einen Container manuell zu starten oder neu aufzusetzen. Es legt im durch TENANTS_DIR festgelegten Verzeichnis (Standard: tenants/) den Ordner / an, erstellt dort eine eigene docker-compose.yml und ein persistentes data/-Verzeichnis, das im Container unter /var/www/data eingebunden wird. So bleiben hochgeladene Logos oder Fotos auch bei Upgrades erhalten. Zusätzlich fordert das Skript das SSL-Zertifikat an. Welches Docker-Image dabei verwendet wird, lässt sich über die Variable APP_IMAGE in der .env steuern. Dieses Tag sollte dem lokal gebauten Slim-Image entsprechen (docker build -t .), da das Onboarding-Skript diese Variable nutzt. Schlägt das Onboarding fehl, hilft ein Blick in das Log: Das Skript legt dabei eine Compose-Datei an, die analog zum Hauptcontainer einen PHP-Webserver auf Port 8080 startet und VIRTUAL_PORT=8080 setzt. Nur so kann der acme-companion die HTTP-Challenge beantworten und das Zertifikat erstellen."}
{"id": "README:0019", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 19, "word_count": 135, "text": "Onboarding fehl, hilft ein Blick in das Log: Das Skript legt dabei eine Compose-Datei an, die analog zum Hauptcontainer einen PHP-Webserver auf Port 8080 startet und VIRTUAL_PORT=8080 setzt. Nur so kann der acme-companion die HTTP-Challenge beantworten und das Zertifikat erstellen. Um diese Container auch aus dem slim-Service heraus starten zu können, bringt das Image nun neben dem Docker-CLI auch das Compose-Plugin mit und benötigt Zugriff auf den Docker-Daemon. Binde dafür /var/run/docker.sock ein oder führe scripts/onboard_tenant.sh alternativ direkt auf dem Host aus, wenn Docker im Container nicht verfügbar ist. Zum Entfernen einer isolierten Instanz nutzt du scripts/offboard_tenant.sh. Das Skript stoppt den Container und löscht das Verzeichnis ${TENANTS_DIR}//: Der Datenbanknutzer, der über POSTGRES_USER definiert ist, muss neue Schemas und Tabellen anlegen dürfen. Bei PostgreSQL reicht etwa folgender Befehl aus: Anschließend kann CREATE SCHEMA im Hintergrund ausgeführt werden."}
{"id": "README:0020", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 20, "word_count": 140, "text": "scripts/offboard_tenant.sh. Das Skript stoppt den Container und löscht das Verzeichnis ${TENANTS_DIR}//: Der Datenbanknutzer, der über POSTGRES_USER definiert ist, muss neue Schemas und Tabellen anlegen dürfen. Bei PostgreSQL reicht etwa folgender Befehl aus: Anschließend kann CREATE SCHEMA im Hintergrund ausgeführt werden. Für den eigentlichen Quiz-Container lässt sich der Hostname über die Umgebungsvariable SLIM_VIRTUAL_HOST steuern. Starte mehrere Instanzen mit unterschiedlichen Werten, werden die Subdomains automatisch als eigene Mandanten behandelt. Der eingesetzte Proxy erzeugt dank nginxproxy/acme-companion für jede konfigurierte Domain ein Let's-Encrypt-Zertifikat, sobald der Container gestartet wird. Damit das Stamm-Domain-Zertifikat (MAIN_DOMAIN) nicht versehentlich fehlt, ergänzt docker-compose.yml diesen Host seit Version 4.16 automatisch in VIRTUAL_HOST/LETSENCRYPT_HOST. Zusätzliche Domains kannst du wie bisher über MARKETING_DOMAINS anhängen. Beim Start normalisiert der Container die Liste (Leerzeichen und Zeilenumbrüche werden entfernt) und löst einen Reload des Proxys über NGINX_RELOADER_URL aus, sodass der acme-companion direkt Zertifikate für neue Marketing-Domains anfordert."}
{"id": "README:0021", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 21, "word_count": 180, "text": "VIRTUAL_HOST/LETSENCRYPT_HOST. Zusätzliche Domains kannst du wie bisher über MARKETING_DOMAINS anhängen. Beim Start normalisiert der Container die Liste (Leerzeichen und Zeilenumbrüche werden entfernt) und löst einen Reload des Proxys über NGINX_RELOADER_URL aus, sodass der acme-companion direkt Zertifikate für neue Marketing-Domains anfordert. Weitere nützliche Variablen in .env sind: - LETSENCRYPT_EMAIL – Kontaktadresse für die automatische Zertifikatserstellung. - MAIN_DOMAIN – zentrale Domain des Quiz-Containers (z.B. quizrace.app). - APP_IMAGE – Docker-Image, das für neue Mandanten verwendet wird. Es sollte den Tag des lokal gebauten Slim-Images (docker build -t .) nutzen, da das Onboarding-Skript auf diese Variable zurückgreift. - NETWORK – Name des Docker-Netzwerks des Reverse Proxy (Standard webproxy). - BASE_PATH – optionaler Basis-Pfad, falls die Anwendung nicht im Root der Domain liegt. - SERVICE_USER – Benutzername für den automatischen Login des Onboarding-Assistenten. - SERVICE_PASS – Passwort dieses Service-Benutzers. - Sind beide gesetzt, führt scripts/create_tenant.sh das Onboarding nach dem Anlegen eines Mandanten automatisch per POST /api/tenants//onboard aus. - **Wichtig:** Der Onboarding-Assistent setzt einen Account mit mindestens der Rolle service-account voraus, um alle Schritte (inklusive POST /restore-default) automatisiert auszuführen. Ein Beispiel zum Anlegen: - NGINX_RELOAD_TOKEN –"}
{"id": "README:0022", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 22, "word_count": 179, "text": "das Onboarding nach dem Anlegen eines Mandanten automatisch per POST /api/tenants//onboard aus. - **Wichtig:** Der Onboarding-Assistent setzt einen Account mit mindestens der Rolle service-account voraus, um alle Schritte (inklusive POST /restore-default) automatisiert auszuführen. Ein Beispiel zum Anlegen: - NGINX_RELOAD_TOKEN – Token für den Webhook http://nginx-reloader:8080/reload. - NGINX_CONTAINER – Name des Proxy-Containers (Standard nginx). - NGINX_RELOAD – auf 0 setzen, wenn ein externer Webhook den Reload übernimmt. - NGINX_RELOADER_URL – URL eines externen Webhooks für den Proxy-Reload. - DISPLAY_ERROR_DETAILS – auf 1 setzen, um detaillierte Fehlermeldungen anzuzeigen. Bei der Mandanten-Erstellung fragt der Onboarding-Assistent nach einem Admin-Passwort. Bleibt das Feld leer, erzeugt die Anwendung automatisch ein sicheres Passwort und zeigt es nach der Einrichtung an. Dieses Passwort ersetzt das zuvor generierte Standardpasswort des Admin-Benutzers. Anpassung --------- Alle wichtigen Einstellungen werden in der Datenbank gespeichert und lassen sich über die Administrationsoberfläche ändern. Die Fragen selbst liegen in data/kataloge/*.json und können mit jedem Texteditor angepasst werden. Jede Katalogdefinition besitzt weiterhin ein slug für die URL. Fragen verknüpfen den Katalog nun über catalog_uid. Das bisherige id dient ausschließlich der Sortierung und wird automatisch vergeben."}
{"id": "README:0023", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 23, "word_count": 154, "text": "Die Fragen selbst liegen in data/kataloge/*.json und können mit jedem Texteditor angepasst werden. Jede Katalogdefinition besitzt weiterhin ein slug für die URL. Fragen verknüpfen den Katalog nun über catalog_uid. Das bisherige id dient ausschließlich der Sortierung und wird automatisch vergeben. QR-Codes können pro Eintrag über qr_image hinterlegt werden, etwa als Data-URI oder lokaler Pfad. Die Übersichtsseiten erzeugen ihre QR-Codes jetzt lokal mit der Bibliothek *chillerlan\\\\php-qrcode*. Katalog-Links erscheinen rot, Team-Links blau. Rich-Text-Editor ---------------- Zum Bearbeiten der statischen Seiten wird **Trumbowyg** eingesetzt. Die Bibliothek kann per CDN eingebunden werden: Die Initialisierung erfolgt im Skript public/js/trumbowyg-pages.js. Dort sind auch eigene UIkit-Vorlagen wie ein Hero-Block oder eine Card hinterlegt. Beim Speichern wird das generierte HTML in das Feld content übertragen. Eine Vorschau lässt sich direkt im Modal aufrufen. Tests ----- Alle Tests lassen sich komfortabel über Composer starten: Dabei führt der Befehl zunächst PHPUnit aus und ruft anschließend die beiden Python-Skripte zur Prüfung der HTML- bzw. JSON-Dateien auf."}
{"id": "README:0024", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 24, "word_count": 147, "text": "content übertragen. Eine Vorschau lässt sich direkt im Modal aufrufen. Tests ----- Alle Tests lassen sich komfortabel über Composer starten: Dabei führt der Befehl zunächst PHPUnit aus und ruft anschließend die beiden Python-Skripte zur Prüfung der HTML- bzw. JSON-Dateien auf. Teams/Personen -------------- - Neuer Tab \"Teams/Personen\" in der Administration. - Liste mit Name und QR-Code, editierbar. - QR-Code-Login auf bekannte Teams/Personen beschränkbar. - Aktivierung/Deaktivierung der Beschränkung per Schalter. - Manuelle Namenseingabe wird bei aktiver Beschränkung unterbunden. - Die Uploadseite für Beweisfotos bietet jetzt ein Eingabefeld mit Vorschlagsliste für die Teamwahl. Datenschutz ----------- Alle Ergebnisse werden in der Datenbank gespeichert. Über die Administrationsoberfläche lassen sie sich als CSV-Datei herunterladen. Jede Zeile enthält ein Pseudonym, den verwendeten Katalog, die Versuchnummer, die Punktzahl, den Zeitpunkt sowie optional die Rätselwort-Bestzeit und den Pfad eines Beweisfotos. Die exportierte Datei ist UTF‑8-kodiert und enthält eine BOM, damit Excel Sonderzeichen korrekt erkennt. Barrierefreiheit ----------------"}
{"id": "README:0025", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 25, "word_count": 132, "text": "herunterladen. Jede Zeile enthält ein Pseudonym, den verwendeten Katalog, die Versuchnummer, die Punktzahl, den Zeitpunkt sowie optional die Rätselwort-Bestzeit und den Pfad eines Beweisfotos. Die exportierte Datei ist UTF‑8-kodiert und enthält eine BOM, damit Excel Sonderzeichen korrekt erkennt. Barrierefreiheit ---------------- Das Frontend bringt mehrere Funktionen mit, die die Nutzung erleichtern: - Ausführliche ARIA-Beschriftungen auf Bedienelementen und Formularfeldern. - Tastatursteuerung für Sortier- und Zuordnungsfragen samt versteckten Hinweisen. - Fortschrittsbalken mit aria-valuenow und Live-Ansage der aktuellen Frage. - Automatische Dark-Mode-Erkennung sowie umschaltbarer Dunkel- und Hochkontrastmodus. Anwenderhandbuch ---------------- Einleitung ---------- Das Projekt *QuizRace* ist eine Web-Applikation zur Erstellung und Verwaltung von Quizfragen. Die Anwendung basiert auf dem Slim Framework und verwendet UIkit3 für das Frontend. Konfigurationen, Kataloge, Teams und Ergebnisse liegen in einer PostgreSQL-Datenbank und lassen sich über die Oberfläche als JSON-Dateien exportieren oder importieren."}
{"id": "README:0026", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 26, "word_count": 150, "text": "Web-Applikation zur Erstellung und Verwaltung von Quizfragen. Die Anwendung basiert auf dem Slim Framework und verwendet UIkit3 für das Frontend. Konfigurationen, Kataloge, Teams und Ergebnisse liegen in einer PostgreSQL-Datenbank und lassen sich über die Oberfläche als JSON-Dateien exportieren oder importieren. Installation und Start ---------------------- - Abhängigkeiten per Composer installieren: Beim ersten Aufruf wird eine composer.lock erzeugt und alle benötigten Bibliotheken geladen. - Die Beispieldatei sample.env in .env kopieren und bei Bedarf anpassen. Sie enthält COMPOSE_PROJECT_NAME=sommerfest-quiz, wodurch Docker Compose bei späteren Deployments bestehende Container und Volumes wiederverwendet: - Lokalen Server starten: Anschließend ist das Quiz unter http://localhost:8080 erreichbar. - Optional: Tabellen in einer PostgreSQL-Datenbank anlegen und JSON-Daten importieren (siehe Abschnitt \"Schnellstart\" für ausführliche Befehle). Für Docker-Betrieb steht ein docker-compose.yml bereit. Zertifikate und weitere Konfigurationen werden in Volumes gesichert, sodass keine lokalen Ordner benötigt werden. Konfiguration ------------- Alle wesentlichen Einstellungen werden in der Datenbank gespeichert und können über die Administration angepasst werden:"}
{"id": "README:0027", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 27, "word_count": 84, "text": "für ausführliche Befehle). Für Docker-Betrieb steht ein docker-compose.yml bereit. Zertifikate und weitere Konfigurationen werden in Volumes gesichert, sodass keine lokalen Ordner benötigt werden. Konfiguration ------------- Alle wesentlichen Einstellungen werden in der Datenbank gespeichert und können über die Administration angepasst werden: Hinweis: Platzhaltergrafiken für Landingpage, calServer und SEO werden nicht mitgeliefert. Legen Sie bei Bedarf eigene Dateien im Bereich \"Global\" des Media-Managers unter /uploads/... an und passen die Pfade (z. B. ogImagePath) entsprechend an. Der Parameter displayErrorDetails kann auch über die Umgebungsvariable DISPLAY_ERROR_DETAILS gesetzt werden."}
{"id": "README:0028", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 28, "word_count": 178, "text": "calServer und SEO werden nicht mitgeliefert. Legen Sie bei Bedarf eigene Dateien im Bereich \"Global\" des Media-Managers unter /uploads/... an und passen die Pfade (z. B. ogImagePath) entsprechend an. Der Parameter displayErrorDetails kann auch über die Umgebungsvariable DISPLAY_ERROR_DETAILS gesetzt werden. Optional kann baseUrl gesetzt werden, um in QR-Codes vollständige Links mit Domain zu erzeugen. QRRemember speichert gescannte Namen und erspart das erneute Einscannen. Der Parameter competitionMode blendet im Quiz alle Neustart-Schaltflächen aus, verhindert Wiederholungen bereits abgeschlossener Kataloge und unterbindet die Anzeige der Katalogübersicht. Die Startseite prüft dabei serverseitig, ob für Spieler und Katalog bereits ein Ergebnis vorliegt, und blockiert bei Wiederholungen den Start. Ein Fragenkatalog kann dann nur über einen direkten QR-Code-Link gestartet werden. Im Wettkampfmodus führt ein Aufruf der Hauptseite ohne gültigen Katalog-Parameter automatisch zur Hilfe-Seite. Über teamResults lässt sich steuern, ob Teams nach Abschluss aller Kataloge ihre eigene Ergebnisübersicht angezeigt bekommen. photoUpload blendet die Buttons zum Hochladen von Beweisfotos ein oder aus. puzzleWordEnabled schaltet das Rätselwort-Spiel frei und puzzleFeedback definiert den Text, der nach korrekter Eingabe angezeigt wird. inviteText enthält ein optionales Anschreiben für teilnehmende Teams."}
{"id": "README:0029", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 29, "word_count": 128, "text": "ihre eigene Ergebnisübersicht angezeigt bekommen. photoUpload blendet die Buttons zum Hochladen von Beweisfotos ein oder aus. puzzleWordEnabled schaltet das Rätselwort-Spiel frei und puzzleFeedback definiert den Text, der nach korrekter Eingabe angezeigt wird. inviteText enthält ein optionales Anschreiben für teilnehmende Teams. ConfigService verwaltet diese Werte in der Datenbank. Jeder Event besitzt dabei eine eigene Konfiguration. Welcher Event aktuell bearbeitet wird, steht in der Tabelle active_event. Ein GET auf /config.json liefert die Einstellungen des aktiven Events, ein POST auf dieselbe URL speichert die Änderungen. Über den URL-Parameter event kann im Frontend ein beliebiger Event zur Ansicht gewählt werden, ohne ihn als aktiv zu setzen. Die Backend-Logik bleibt davon unberührt. Mit lang lässt sich zusätzlich die Sprache der Oberfläche festlegen (en oder de). Die Übersetzungen befinden sich in resources/lang/ sowie public/js/i18n/."}
{"id": "README:0030", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 30, "word_count": 180, "text": "Frontend ein beliebiger Event zur Ansicht gewählt werden, ohne ihn als aktiv zu setzen. Die Backend-Logik bleibt davon unberührt. Mit lang lässt sich zusätzlich die Sprache der Oberfläche festlegen (en oder de). Die Übersetzungen befinden sich in resources/lang/ sowie public/js/i18n/. Authentifizierung ----------------- Der Zugang zum Administrationsbereich erfolgt über /login. Benutzer und Rollen werden in der Tabelle users verwaltet. Nach erfolgreichem POST mit gültigen Zugangsdaten speichert das System die Benutzerinformationen inklusive Rolle in der Session und leitet Administratoren zur Route /admin weiter. Die Middleware RoleAuthMiddleware prüft die gespeicherte Rolle und leitet bei fehlenden Berechtigungen zum Login um. E-Mail-Versand -------------- Für Funktionen wie das Zurücksetzen von Passwörtern nutzt die Anwendung Symfony Mailer. Für die Anbindung stehen zwei Varianten zur Verfügung: - **Klassisches SMTP** über folgende Variablen: - SMTP_HOST – Hostname des Servers - SMTP_USER – Benutzername - SMTP_PASS – Passwort - SMTP_PORT – Port (z. B. 587) - SMTP_ENCRYPTION – Verschlüsselung (none, tls oder ssl) - **Direkter Mailer-DSN** über MAILER_DSN, falls ein Provider mit eigener API oder speziellen Parametern verwendet wird. In diesem Fall werden die Werte aus SMTP_HOST bis SMTP_ENCRYPTION ignoriert."}
{"id": "README:0031", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 31, "word_count": 145, "text": "– Port (z. B. 587) - SMTP_ENCRYPTION – Verschlüsselung (none, tls oder ssl) - **Direkter Mailer-DSN** über MAILER_DSN, falls ein Provider mit eigener API oder speziellen Parametern verwendet wird. In diesem Fall werden die Werte aus SMTP_HOST bis SMTP_ENCRYPTION ignoriert. Unabhängig von der Variante legen SMTP_FROM (Absenderadresse) und SMTP_FROM_NAME (Absendername) den sichtbaren Absender fest. Diese Variablen können in .env gesetzt werden. Beispiele für DSNs: - Brevo SMTP: smtp://support%40quizrace.app:DEIN_STARKES_PASSWORT@smtp.brevo.com:587?encryption=tls - Mailgun API: mailgun+https://API_KEY:DEINE-DOMAIN@default?region=eu - Brevo API: brevo+api://DEIN_API_KEY@default - Mailchimp (Mandrill) API: mailchimp+https://DEIN_MANDRILL_KEY@default Cloudflare Turnstile -------------------- Die Marketing-Kontaktformulare lassen sich zusätzlich mit einem Cloudflare-Turnstile-Captcha schützen. Dafür müssen in der .env beide Schlüssel hinterlegt werden: - TURNSTILE_SITE_KEY – öffentlicher Schlüssel für das Frontend-Widget - TURNSTILE_SECRET_KEY – geheimer Schlüssel für die Server-Validierung Sind beide Werte gesetzt, blendet die Landingpage automatisch das Turnstile-Widget ein und der ContactController validiert eingehende Token serverseitig. Ohne Konfiguration bleibt das Formular wie bisher frei zugänglich."}
{"id": "README:0032", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 32, "word_count": 124, "text": "öffentlicher Schlüssel für das Frontend-Widget - TURNSTILE_SECRET_KEY – geheimer Schlüssel für die Server-Validierung Sind beide Werte gesetzt, blendet die Landingpage automatisch das Turnstile-Widget ein und der ContactController validiert eingehende Token serverseitig. Ohne Konfiguration bleibt das Formular wie bisher frei zugänglich. Passwort zurücksetzen --------------------- Die API unterstützt ein zweistufiges Verfahren zum Zurücksetzen vergessener Passwörter: - POST /password/reset/request nimmt einen Benutzernamen oder eine E‑Mail-Adresse entgegen und verschickt einen Link mit einem Reset-Token. - POST /password/reset/confirm setzt nach Validierung des Tokens das neue Passwort. Für den Versand der E-Mails muss entweder ein vollständiger MAILER_DSN gesetzt oder – beim SMTP-Fallback – SMTP_HOST, SMTP_USER, SMTP_PASS, SMTP_PORT und SMTP_ENCRYPTION konfiguriert sein. Über SMTP_FROM und SMTP_FROM_NAME lässt sich der Absender zentral festlegen. Das Token ist aus Sicherheitsgründen nur eine Stunde gültig."}
{"id": "README:0033", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 33, "word_count": 126, "text": "der E-Mails muss entweder ein vollständiger MAILER_DSN gesetzt oder – beim SMTP-Fallback – SMTP_HOST, SMTP_USER, SMTP_PASS, SMTP_PORT und SMTP_ENCRYPTION konfiguriert sein. Über SMTP_FROM und SMTP_FROM_NAME lässt sich der Absender zentral festlegen. Das Token ist aus Sicherheitsgründen nur eine Stunde gültig. Administrationsoberfläche ------------------------- Unter /admin stehen folgende Tabs zur Verfügung: - **Veranstaltung konfigurieren** – Einstellungen wie Logo, Farben und Texte. - **Übersicht** – Ergebnisse tabellarisch einsehen. - **Kataloge** – Fragenkataloge erstellen und verwalten. - **Fragen anpassen** – Fragen eines Katalogs hinzufügen, bearbeiten oder löschen. - **Teams/Personen** – Teilnehmerlisten pflegen, optional als Login-Beschränkung. - **Ergebnisse** – Spielstände einsehen und herunterladen. - **Statistik** – Einzelne Antworten analysieren und nach Teams filtern. - **Landing-News** – News-Beiträge einzelnen Landingpages zuordnen, inklusive Veröffentlichungstermin und Sichtbarkeitsstatus. - **Administration** – Benutzer und Backups verwalten."}
{"id": "README:0034", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 34, "word_count": 179, "text": "Teilnehmerlisten pflegen, optional als Login-Beschränkung. - **Ergebnisse** – Spielstände einsehen und herunterladen. - **Statistik** – Einzelne Antworten analysieren und nach Teams filtern. - **Landing-News** – News-Beiträge einzelnen Landingpages zuordnen, inklusive Veröffentlichungstermin und Sichtbarkeitsstatus. - **Administration** – Benutzer und Backups verwalten. Fragenkataloge -------------- data/kataloge/catalogs.json listet verfügbare Kataloge mit slug, Name und optionaler QR-Code-Adresse. Die Reihenfolge wird durch das Feld sort_order bestimmt. Jede Frage speichert die zugehörige catalog_uid. Jeder Eintrag kann zusätzlich ein Feld raetsel_buchstabe enthalten, das den Buchstaben für das Rätselwort festlegt. Die API bietet hierzu folgende Endpunkte: - GET /kataloge/{file} liefert den JSON-Katalog oder leitet im Browser auf /?katalog=slug um. - PUT /kataloge/{file} legt eine neue Datei an. - POST /kataloge/{file} überschreibt einen Katalog mit gesendeten Daten. - DELETE /kataloge/{file} entfernt die Datei. - DELETE /kataloge/{file}/{index} löscht eine Frage anhand des Index. Teams und QR-Code-Login ----------------------- In data/teams.json können Teilnehmernamen gespeichert werden. GET /teams.json ruft die Liste ab, POST /teams.json speichert sie. Ein optionales Häkchen „Nur Teams/Personen aus der Liste dürfen teilnehmen“ aktiviert eine Zugangsbeschränkung via QR-Code. QR-Codes lassen sich direkt in der Oberfläche generieren. Voraussetzungen für QR-Code-Endpunkte -------------------------------------"}
{"id": "README:0035", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 35, "word_count": 132, "text": "Teilnehmernamen gespeichert werden. GET /teams.json ruft die Liste ab, POST /teams.json speichert sie. Ein optionales Häkchen „Nur Teams/Personen aus der Liste dürfen teilnehmen“ aktiviert eine Zugangsbeschränkung via QR-Code. QR-Codes lassen sich direkt in der Oberfläche generieren. Voraussetzungen für QR-Code-Endpunkte ------------------------------------- Damit die QR-Code-Endpunkte unter /qr/... funktionieren, müssen folgende Bedingungen erfüllt sein: - Bei Apache ist mod_rewrite zu aktivieren oder bei Nginx entsprechende Rewrite-Regeln einzurichten. - Die PHP-Erweiterung gd muss aktiv sein, um die QR-Codes zu rendern. Ob die Konfiguration korrekt ist, lässt sich mit /qr/team?t=Beispiel testen. Spielerprofil ------------- Auf /profile legen Teilnehmende ihren Anzeigenamen fest. Ist die Option für Zufallsnamen aktiv und noch kein Name hinterlegt, leitet die Startseite automatisch auf diese Profilseite weiter. Nach dem Speichern werden Name und eine zufällige Kennung lokal gespeichert und über /api/players an den Server gemeldet."}
{"id": "README:0036", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 36, "word_count": 144, "text": "ihren Anzeigenamen fest. Ist die Option für Zufallsnamen aktiv und noch kein Name hinterlegt, leitet die Startseite automatisch auf diese Profilseite weiter. Nach dem Speichern werden Name und eine zufällige Kennung lokal gespeichert und über /api/players an den Server gemeldet. Ergebnisse ---------- Alle Resultate werden in der Datenbank abgelegt. Die API bietet folgende Endpunkte: - GET /results.json – liefert alle gespeicherten Ergebnisse. - POST /results – fügt ein neues Ergebnis hinzu. - DELETE /results – löscht alle Einträge. - GET /results/download – erzeugt eine CSV-Datei mit allen Resultaten. - GET /question-results.json – listet falsch beantwortete Fragen. Die Ergebnisübersicht zeigt drei Ranglisten. Der Titel „Katalogmeister\" basiert auf dem Zeitpunkt, an dem ein Team seinen letzten noch offenen Fragenkatalog abgeschlossen hat. Wer hier die früheste Zeit erreicht, führt die Liste an. Um überhaupt in dieser Liste zu erscheinen, müssen alle Kataloge aus data/kataloge/catalogs.json vollständig gelöst sein."}
{"id": "README:0037", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 37, "word_count": 142, "text": "basiert auf dem Zeitpunkt, an dem ein Team seinen letzten noch offenen Fragenkatalog abgeschlossen hat. Wer hier die früheste Zeit erreicht, führt die Liste an. Um überhaupt in dieser Liste zu erscheinen, müssen alle Kataloge aus data/kataloge/catalogs.json vollständig gelöst sein. Statistik --------- Im Statistik-Tab lassen sich alle gegebenen Antworten detailliert auswerten. Die Tabelle zeigt Name, Versuch, Katalog, Frage, Antwort, ob sie korrekt war, und ein optionales Beweisfoto. Über ein Dropdown lässt sich die Ansicht auf einzelne Teams oder Personen beschränken. Administration -------------- Backups lassen sich über /export erstellen und per /import oder /backups/{name}/restore wiederherstellen. GET /backups listet alle Sicherungen, einzelne Ordner können über /backups/{name}/download heruntergeladen oder via DELETE /backups/{name} entfernt werden. Damit das funktioniert, muss der Ordner backup/ vom Serverprozess beschreibbar sein. Neben Mandanten-Zertifikaten kann das SSL-Zertifikat der Admin-Domain über einen POST auf /api/renew-ssl erneuert werden. Der Aufruf startet den Hauptcontainer neu."}
{"id": "README:0038", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 38, "word_count": 131, "text": "über /backups/{name}/download heruntergeladen oder via DELETE /backups/{name} entfernt werden. Damit das funktioniert, muss der Ordner backup/ vom Serverprozess beschreibbar sein. Neben Mandanten-Zertifikaten kann das SSL-Zertifikat der Admin-Domain über einen POST auf /api/renew-ssl erneuert werden. Der Aufruf startet den Hauptcontainer neu. Logo hochladen -------------- Das aktuelle Logo wird unter /logo.png oder /logo.webp bereitgestellt. Über einen POST auf diese URLs lässt sich eine neue PNG- oder WebP-Datei hochladen. Nach dem Upload wird der Pfad automatisch in der Datenbank gespeichert. Die Datei landet im Verzeichnis data/, damit auch PDFs das Logo einbinden können. Sicherheit und Haftung ---------------------- Die Software wird ohne Gewähr bereitgestellt. Alle Rechte liegen bei René Buske. Eine Haftung für Schäden, die aus der Nutzung entstehen, ist ausgeschlossen. Die integrierten Maßnahmen zur Barrierefreiheit verbessern die Zugänglichkeit, sie ersetzen jedoch keine individuelle Prüfung."}
{"id": "README:0039", "source": "/workspace/sommerfest-quiz/README.md", "title": "QuizRace", "chunk_index": 39, "word_count": 146, "text": "und Haftung ---------------------- Die Software wird ohne Gewähr bereitgestellt. Alle Rechte liegen bei René Buske. Eine Haftung für Schäden, die aus der Nutzung entstehen, ist ausgeschlossen. Die integrierten Maßnahmen zur Barrierefreiheit verbessern die Zugänglichkeit, sie ersetzen jedoch keine individuelle Prüfung. Fazit ----- Die API ermöglicht die komplette Verwaltung eines Quizsystems: - Konfiguration, Fragenkataloge, Teams, Ergebnisse und Fotoeinwilligungen werden in einer PostgreSQL-Datenbank verwaltet. - Über das Admin-Frontend sind diese Bereiche komfortabel zugänglich. - Ergebnisse lassen sich als Excel/CSV exportieren. Dieses Handbuch fasst die Nutzung von der Grundkonfiguration über das Anlegen der Fragen und Teams bis zum Abruf der Resultate zusammen. Durch den Einsatz von Slim Framework und standardisierten Endpunkten ist die Anwendung sowohl lokal als auch im Netzwerk schnell einsetzbar. Lizenz ------ Dieses Projekt steht unter einer proprietären Lizenz. Alle Rechte gehören René Buske. Eine kommerzielle Nutzung ist erlaubt. Weitere Informationen finden Sie in der Datei LICENSE."}
{"id": "about:0000", "source": "/workspace/sommerfest-quiz/docs/about.md", "title": "Projekt\\u00fcberblick", "chunk_index": 0, "word_count": 119, "text": "Projekt\\u00fcberblick --------------------- Das QuizRace ist eine leichtgewichtige Web-Applikation zum Durchf\\u00fchren von Quizrunden auf Veranstaltungen. Die Anwendung setzt auf das Slim Framework und nutzt UIkit3 f\\u00fcr ein responsives Design. Fragenkataloge, Teilnehmer und Ergebnisse werden in einer PostgreSQL-Datenbank gespeichert und k\\u00f6nnen per JSON importiert oder exportiert werden. Spielregeln ----------- - Jedes Team meldet sich \\u00fcber einen QR-Code oder manuell mit einem Namen an. - Ein Fragenkatalog kann Sortier-, Zuordnungs- und Multiple-Choice-Aufgaben enthalten. - Die Punktezahl h\\u00e4ngt von der Anzahl korrekt gel\\u00f6ster Aufgaben ab. - Optional kann zu jeder Frage ein Buchstabe f\\u00fcr ein R\\u00e4tselwort vergeben werden. - Nachdem alle Fragen beantwortet wurden, wird die Gesamtwertung angezeigt. Bei aktivem Wettkampfmodus sind Wiederholungen nicht m\\u00f6glich. Weitere Details zur Einrichtung finden Sie im Haupt-README."}
{"id": "admin:0000", "source": "/workspace/sommerfest-quiz/docs/admin.md", "title": "Administration", "chunk_index": 0, "word_count": 169, "text": "Administration -------------- Die Administrationsoberfläche erreichen Sie über /admin/dashboard (kurz /admin) nach einem erfolgreichen Login. Alle Management-Rollen (z. B. event-manager, team-manager) werden nach dem Login automatisch zum Admin-Dashboard weitergeleitet. Die Navigation ist in folgende Kategorien gegliedert: - **Event** - **Startseite** – /admin/dashboard - **Events** – /admin/events - **Event-Konfiguration** – /admin/event/settings - **Übersicht** – /admin/summary - **Inhalte** - **Kataloge** – /admin/catalogs - **Fragen bearbeiten** – /admin/questions - **Seiten** – /admin/pages (nur Administratoren) - **Teams** - **Teams/Personen** – /admin/teams - **Auswertung** - **Ergebnisse** – /admin/results - **Statistik** – /admin/statistics - **Konto** - **Profil** – /admin/profile - **Abo** – /admin/subscription - **Administration** - **Administration** – /admin/management (nur Administratoren) - **Subdomains** – /admin/tenants (nur Administratoren) Im Tab \"Administration\" lassen sich JSON-Sicherungen exportieren und bei Bedarf wiederherstellen. Der Statistik-Tab listet jede Antwort mit Name, Versuch, Katalog, Frage, Antwort, Richtig-Status und optionalem Beweisfoto. Über ein Auswahlfeld lassen sich die Daten nach Teams oder Personen filtern. Weitere Funktionen wie der QR-Code-Login mit Namensspeicherung oder der Wettkampfmodus lassen sich über die Event-Konfiguration in der Datenbank aktivieren. Domänen-Konfiguration ---------------------"}
{"id": "admin:0001", "source": "/workspace/sommerfest-quiz/docs/admin.md", "title": "Administration", "chunk_index": 1, "word_count": 179, "text": "Katalog, Frage, Antwort, Richtig-Status und optionalem Beweisfoto. Über ein Auswahlfeld lassen sich die Daten nach Teams oder Personen filtern. Weitere Funktionen wie der QR-Code-Login mit Namensspeicherung oder der Wettkampfmodus lassen sich über die Event-Konfiguration in der Datenbank aktivieren. Domänen-Konfiguration --------------------- Die Anwendung unterscheidet über die Umgebungsvariable MAIN_DOMAIN zwischen der Hauptdomain und möglichen Mandanten-Domains. Sie legt fest, unter welcher Basisadresse der Quiz-Container erreichbar ist, etwa quiz.example. Typische Subdomains sind: - admin. – Administrationsoberfläche - {tenant}. – individuelle Mandanteninstanzen Zusätzlich lassen sich weitere Marketing-Domains über die Umgebungsvariable MARKETING_DOMAINS (Komma- oder Zeilen-separiert) freischalten. Diese Domains liefern die Inhalte der Landing Pages aus, ohne eine Mandanten-Subdomain verwenden zu müssen. Damit der Reverse Proxy automatisch TLS-Zertifikate für diese Hosts anfordert, sollten die Domains kommagetrennt eingetragen werden; die Liste wird dann direkt an VIRTUAL_HOST/LETSENCRYPT_HOST des Slim-Containers durchgereicht. Die DomainMiddleware prüft bei jeder Anfrage den Host gegen MAIN_DOMAIN und die Marketing-Liste und setzt entsprechend das Attribut domainType (main, tenant oder marketing). Ist MAIN_DOMAIN leer oder stimmt keine der konfigurierten Domains mit der aufgerufenen Domain überein, blockiert die Middleware den Zugriff mit 403 Invalid main domain configuration."}
{"id": "admin:0002", "source": "/workspace/sommerfest-quiz/docs/admin.md", "title": "Administration", "chunk_index": 2, "word_count": 164, "text": "gegen MAIN_DOMAIN und die Marketing-Liste und setzt entsprechend das Attribut domainType (main, tenant oder marketing). Ist MAIN_DOMAIN leer oder stimmt keine der konfigurierten Domains mit der aufgerufenen Domain überein, blockiert die Middleware den Zugriff mit 403 Invalid main domain configuration. Beispiel für eine Fehlkonfiguration ----------------------------------- Ist MAIN_DOMAIN=quiz.example gesetzt, die Anwendung wird aber über quiz.local aufgerufen, funktioniert der Login unter admin.quiz.local zwar. Nach der Weiterleitung auf /admin greift die DomainMiddleware jedoch ein und der Browser zeigt einen 403 an. Erst wenn MAIN_DOMAIN auf die tatsächlich genutzte Domain gesetzt wird, lässt sich das Dashboard erreichen. Aktive Events ------------- Über zwei Mechanismen wird festgelegt, für welches Event der Server arbeitet: - **Admin-Flag** – Administratoren können im Backend ein Event als aktiv markieren. ConfigService::setActiveEventUid schreibt die jeweilige event_uid in die Tabelle active_event. ConfigService::getActiveEventUid liest diesen Wert und stellt ihn dem Backend als Standard bereit. - **Frontend-Auswahl** – Im Frontend wird das Event ausschließlich über den URL-Parameter event bestimmt. Der Wert landet in window.quizConfig.event_uid und steuert sämtliche clientseitige Funktionen."}
{"id": "admin:0003", "source": "/workspace/sommerfest-quiz/docs/admin.md", "title": "Administration", "chunk_index": 3, "word_count": 166, "text": "in die Tabelle active_event. ConfigService::getActiveEventUid liest diesen Wert und stellt ihn dem Backend als Standard bereit. - **Frontend-Auswahl** – Im Frontend wird das Event ausschließlich über den URL-Parameter event bestimmt. Der Wert landet in window.quizConfig.event_uid und steuert sämtliche clientseitige Funktionen. Der gesetzte Admin-Flag dient nur dazu, eine Vorauswahl für das Backend zu liefern. Die Anwendung im Browser orientiert sich ausschließlich am URL-basierten Event und ignoriert den in active_event gespeicherten Wert. Statische Seiten bearbeiten --------------------------- Im Tab **Seiten** können Administratoren die HTML-Dateien landing, impressum, datenschutz und faq anpassen. Über das Untermenü wird die gewünschte Seite ausgewählt und im **Trumbowyg**-Editor bearbeitet. Zusätzlich stehen eigene UIkit-Blöcke zur Verfügung, etwa ein Hero-Abschnitt oder eine Card. Mit **Speichern** werden die Änderungen im Ordner content/ abgelegt. Die Schaltfläche *Vorschau* zeigt den aktuellen Stand direkt im Modal an. Alternativ kann der Editor weiterhin über /admin/pages/{slug} aufgerufen werden. Wird die dunkle Hero-Vorlage (uk-section-primary uk-light) genutzt, sollte anschließend ein Abschnitt mit einer Hintergrundklasse wie section--alt eingefügt werden, damit der Seitenhintergrund wieder aufgehellt wird. Bild-Uploads ------------"}
{"id": "admin:0004", "source": "/workspace/sommerfest-quiz/docs/admin.md", "title": "Administration", "chunk_index": 4, "word_count": 116, "text": "Stand direkt im Modal an. Alternativ kann der Editor weiterhin über /admin/pages/{slug} aufgerufen werden. Wird die dunkle Hero-Vorlage (uk-section-primary uk-light) genutzt, sollte anschließend ein Abschnitt mit einer Hintergrundklasse wie section--alt eingefügt werden, damit der Seitenhintergrund wieder aufgehellt wird. Bild-Uploads ------------ Alle Bilder werden über den ImageUploadService verarbeitet. Globale Dateien landen im Verzeichnis data/uploads, eventbezogene Bilder unter data/events//images. | Typ | Beispielpfad | Qualität | |---------------------|------------------------------------------|----------| | Logo | /events//images/logo.png | 80 (QUALITY_LOGO) | Sticker-Hintergrund | /events//images/sticker-bg.png | 90 (QUALITY_STICKER) | Foto | /uploads/photo.jpg | 70 (QUALITY_PHOTO) Die Qualität entspricht den Konstanten in ImageUploadService und sorgt für einheitlich komprimierte Dateien. Globale Dateien lassen sich direkt über /uploads/ abrufen, beispielsweise damit Vorschaubilder im Medienmanager korrekt geladen werden können."}
{"id": "admin:0005", "source": "/workspace/sommerfest-quiz/docs/admin.md", "title": "Administration", "chunk_index": 5, "word_count": 167, "text": "| 90 (QUALITY_STICKER) | Foto | /uploads/photo.jpg | 70 (QUALITY_PHOTO) Die Qualität entspricht den Konstanten in ImageUploadService und sorgt für einheitlich komprimierte Dateien. Globale Dateien lassen sich direkt über /uploads/ abrufen, beispielsweise damit Vorschaubilder im Medienmanager korrekt geladen werden können. Über /admin/media steht eine Medienbibliothek bereit, die globale und eventbezogene Uploads kapselt. Die Oberfläche listet alle Dateien mit Größe und Änderungsdatum auf, erlaubt eine Volltextsuche sowie das seitenweise Durchblättern (20 Einträge pro Seite). Uploads werden serverseitig auf 5 MB und die Formate PNG/JPG/WEBP/SVG begrenzt; fehlerhafte Anfragen liefern strukturierte Antworten mit einem error-Feld und den gültigen limits. Die gleichen Informationen stehen nach erfolgreichen Aktionen zur Verfügung, etwa nach dem Hochladen (message: uploaded) oder beim Umbenennen (message: renamed). Alle XHR-Endpunkte (/admin/media/files, /admin/media/upload, /admin/media/rename, /admin/media/delete) sind per CSRF-Token und RoleAuthMiddleware(Roles::ADMIN, Roles::CATALOG_EDITOR) abgesichert. Die JSON-Antworten enthalten neben der Dateiliste zusätzliche Metadaten (mime, size, modified) sowie die Upload-Limits, damit Clients die Vorgaben unmittelbar in der Oberfläche anzeigen können. Pfad-Traversal wird serverseitig verhindert, indem Dateinamen strikt normalisiert und nur bekannte Verzeichnisse zugelassen werden."}
{"id": "admin:0006", "source": "/workspace/sommerfest-quiz/docs/admin.md", "title": "Administration", "chunk_index": 6, "word_count": 90, "text": "Roles::CATALOG_EDITOR) abgesichert. Die JSON-Antworten enthalten neben der Dateiliste zusätzliche Metadaten (mime, size, modified) sowie die Upload-Limits, damit Clients die Vorgaben unmittelbar in der Oberfläche anzeigen können. Pfad-Traversal wird serverseitig verhindert, indem Dateinamen strikt normalisiert und nur bekannte Verzeichnisse zugelassen werden. Im Vorschaubereich blendet der Medienmanager bei ausgewählter Datei ein schreibgeschütztes URL-Feld ein. Der Wert entspricht der aufgelösten Download-Adresse (inklusive Basis-Pfad) und lässt sich über die Schaltfläche **URL kopieren** in die Zwischenablage übernehmen. Bei Browsern ohne Clipboard-API bleibt das Feld fokussierbar, die Anwendung informiert über einen Hinweis-Toast über das manuelle Kopieren."}
{"id": "datenschutz:0000", "source": "/workspace/sommerfest-quiz/docs/datenschutz.md", "title": "- Verantwortlicher", "chunk_index": 0, "word_count": 176, "text": "- Verantwortlicher ------------------- Verantwortlich für die Datenverarbeitung im Rahmen dieser Anwendung ist: René Buske Weidenbusch 8 14532 Kleinmachnow E-Mail: info@calhelp.de - Zweck der Datenverarbeitung ------------------------------ Die Quiz-App dient der Durchführung eines digitalen Quiz im Rahmen der Sommerfeier 2025. Die Erhebung und Verarbeitung von Daten erfolgt ausschließlich zur Bereitstellung und Verbesserung des Quiz-Angebots. - Art und Umfang der erhobenen Daten ------------------------------------- **Keine Erhebung personenbezogener Daten:** Es werden keinerlei personenbezogene Daten (wie Name, E-Mail, Adresse etc.) abgefragt, gespeichert oder verarbeitet. **Quiz-Daten:** Bei der Nutzung der App werden lediglich pseudonymisierte Daten wie frei gewählte Benutzernamen, erzielte Punktzahlen und ggf. technische Informationen zum Ablauf des Quiz verarbeitet. **Serverdatei (Veranstaltungsname.csv):** Bei aktivierter Speicherung werden Pseudonyme, Katalogname, Versuch, Punktzahl und Zeitpunkt serverseitig gesichert. Die Ablage erfolgt anonymisiert und konform zur DSGVO. - Speicherung und Löschung --------------------------- **Serverseitige Speicherung:** Je nach Konfiguration werden Quiz-Ergebnisse anonymisiert auf dem Server gespeichert. Diese Speicherung erfolgt entsprechend den Anforderungen der DSGVO. **Lokal gespeicherte Daten:** Sofern lokal gespeichert wird (z. B. im Browser-Storage), verbleiben die Daten ausschließlich auf dem Endgerät des Nutzers und werden nicht an Dritte übermittelt."}
{"id": "datenschutz:0001", "source": "/workspace/sommerfest-quiz/docs/datenschutz.md", "title": "- Verantwortlicher", "chunk_index": 1, "word_count": 155, "text": "Quiz-Ergebnisse anonymisiert auf dem Server gespeichert. Diese Speicherung erfolgt entsprechend den Anforderungen der DSGVO. **Lokal gespeicherte Daten:** Sofern lokal gespeichert wird (z. B. im Browser-Storage), verbleiben die Daten ausschließlich auf dem Endgerät des Nutzers und werden nicht an Dritte übermittelt. **Löschung:** Alle gespeicherten Daten werden spätestens nach Abschluss des Quiz-Events gelöscht oder anonymisiert. - Keine Weitergabe an Dritte ----------------------------- Es findet keine Übermittlung oder Weitergabe von Daten an Dritte statt. - Cookies und Tracking ----------------------- Die App setzt ein technisch notwendiges Session-Cookie (PHPSESSID), das für den Betrieb erforderlich ist, z. B. für den Admin-Login. Dieses Cookie enthält keine personenbezogenen Daten und wird nach Beenden des Browsers gelöscht. Ein darüber hinaus gehendes Tracking findet nicht statt. - Rechte der Nutzer -------------------- Da keine personenbezogenen Daten verarbeitet werden, bestehen keine Betroffenenrechte im Sinne der DSGVO bezüglich Auskunft, Berichtigung, Löschung oder Übertragbarkeit. - Kontakt ---------- Für Fragen zum Datenschutz oder zur Anwendung wenden Sie sich bitte an info@calhelp.de."}
{"id": "datenschutz:0002", "source": "/workspace/sommerfest-quiz/docs/datenschutz.md", "title": "- Verantwortlicher", "chunk_index": 2, "word_count": 81, "text": "- Rechte der Nutzer -------------------- Da keine personenbezogenen Daten verarbeitet werden, bestehen keine Betroffenenrechte im Sinne der DSGVO bezüglich Auskunft, Berichtigung, Löschung oder Übertragbarkeit. - Kontakt ---------- Für Fragen zum Datenschutz oder zur Anwendung wenden Sie sich bitte an info@calhelp.de. *Hinweis: Diese Datenschutzerklärung basiert auf dem aktuellen Stand der Technik und des Projekts. CalHelp übernimmt keine Verantwortung für bereits durch Administrator:innen eingegebene personenbezogene Daten. Sollte sich der Funktionsumfang ändern oder die App personenbezogene Daten erheben, ist eine Anpassung dieser Datenschutzerklärung erforderlich.*"}
{"id": "faq:0000", "source": "/workspace/sommerfest-quiz/docs/faq.md", "title": "Häufige Fragen", "chunk_index": 0, "word_count": 147, "text": "Häufige Fragen -------------- Wie starte ich das Quiz? ------------------------ Scanne an der ersten Station den QR-Code oder öffne den bereitgestellten Link. Wähle deinen Namen aus und schon geht es los. Kann ich das Quiz unterwegs spielen? ------------------------------------ Ja, die Oberfläche passt sich jedem Gerät an – ob Handy, Tablet oder PC. Welche Fragetypen gibt es? -------------------------- Das Quiz bietet Sortieren, Zuordnen, Multiple Choice, Swipe-Karten, Foto mit Texteingabe und \"Hätten Sie es gewusst?\"-Karten. Wie bediene ich Drag & Drop? ---------------------------- Halte ein Element gedrückt und ziehe es an die gewünschte Stelle. Gibt es einen Dunkelmodus? -------------------------- Ja. Über das Mond-Symbol oben rechts lässt sich die dunkle Ansicht einschalten. Was passiert mit meinen Ergebnissen? ------------------------------------ Die Punkte werden anonym gezählt und können am Ende als Statistik exportiert werden. Warum wurde das Quiz entwickelt? -------------------------------- Es zeigt, wie Menschen und KI gemeinsam neue digitale Möglichkeiten schaffen können. Unser Anspruch --------------"}
{"id": "faq:0001", "source": "/workspace/sommerfest-quiz/docs/faq.md", "title": "Häufige Fragen", "chunk_index": 1, "word_count": 116, "text": "Was passiert mit meinen Ergebnissen? ------------------------------------ Die Punkte werden anonym gezählt und können am Ende als Statistik exportiert werden. Warum wurde das Quiz entwickelt? -------------------------------- Es zeigt, wie Menschen und KI gemeinsam neue digitale Möglichkeiten schaffen können. Unser Anspruch -------------- Bei der Entwicklung wurde besonders geachtet auf: - **Barrierefreiheit**: Die App ist auch für Menschen mit Einschränkungen gut nutzbar. - **Datenschutz**: Die Daten werden vertraulich behandelt. - **Schnelle und stabile Nutzung**: Die Anwendung läuft zuverlässig, auch bei vielen Teilnehmenden. - **Einfache Bedienung**: Alle Funktionen sind selbsterklärend. - **Funktioniert auf allen Geräten**: Handy, Tablet oder PC – freie Wahl. - **Nachhaltigkeit**: Die App wurde ressourcenschonend umgesetzt. - **Offene Schnittstellen**: Sie lässt sich leicht mit anderen Systemen verbinden."}
{"id": "frontend-word-break:0000", "source": "/workspace/sommerfest-quiz/docs/frontend-word-break.md", "title": "Richtlinien zur Worttrennung im Frontend", "chunk_index": 0, "word_count": 123, "text": "Richtlinien zur Worttrennung im Frontend ---------------------------------------- Damit **lange Wörter im HTML** bei einem Zeilenumbruch automatisch korrekt getrennt werden, können folgende CSS- und HTML-Regeln verwendet werden. - CSS: Automatisches Umbrechen langer Wörter --------------------------------------------- a) word-break ------------- - Trennt Wörter an beliebiger Stelle, wenn nötig. b) overflow-wrap / word-wrap ---------------------------- - Bricht lange Wörter nur um, wenn erforderlich. - **Empfohlen**: overflow-wrap: break-word; für natürliches Verhalten. - HTML: Optionale Trennstellen setzen -------------------------------------- a) Weiche Trennstellen mit &shy; -------------------------------- Beim Zeilenumbruch wird dann an dieser Stelle getrennt. - Beispiel ----------- **CSS-Lösung (empfohlen):** - Spezialfall: Silbentrennung ------------------------------ Für sprachspezifische Trennung kann das CSS-Attribut hyphens genutzt werden: Im HTML sollte das Attribut lang gesetzt werden: Zusammenfassung --------------- - Allgemein: - Echte Silbentrennung: - Manuelle Trennstellen mit &shy; im HTML."}
{"id": "impressum:0000", "source": "/workspace/sommerfest-quiz/docs/impressum.md", "title": "Angaben gemäß § 5 TMG", "chunk_index": 0, "word_count": 102, "text": "Angaben gemäß § 5 TMG René Buske Weidenbusch 8 14532 Kleinmachnow Deutschland E-Mail: office@calhelp.de **Verantwortlich für den Inhalt nach § 55 Abs. 2 RStV:** René Buske Weidenbusch 8 14532 Kleinmachnow Umsatzsteuer-Identifikationsnummer gemäß § 27 a Umsatzsteuergesetz: DE 259645623 Haftungsausschluss ------------------ Trotz sorgfältiger inhaltlicher Kontrolle übernehmen wir keine Haftung für die Inhalte externer Links. Für den Inhalt der verlinkten Seiten sind ausschließlich deren Betreiber verantwortlich. Urheberrecht ------------ Die durch den Seitenbetreiber erstellten Inhalte und Werke auf dieser Website unterliegen dem deutschen Urheberrecht. Beiträge Dritter sind als solche gekennzeichnet. Quellcode --------- Der Quellcode dieser Anwendung ist Eigentum von René Buske und nicht öffentlich zugänglich."}
{"id": "index:0000", "source": "/workspace/sommerfest-quiz/docs/index.md", "title": "QuizRace", "chunk_index": 0, "word_count": 147, "text": "QuizRace -------- Das **QuizRace** ist eine Web-App für Veranstaltungen. Die Anwendung basiert auf dem Slim Framework und nutzt UIkit3 für ein responsives Design. Fragenkataloge, Teilnehmer und Ergebnisse werden in einer PostgreSQL-Datenbank gespeichert und können per JSON importiert oder exportiert werden. Die Anwendung benötigt PHP 8.2 oder höher. Die Entwicklung entstand als Machbarkeitsstudie, um das Potenzial moderner Code-Assistenten in der Praxis zu testen. Barrierefreiheit, Datenschutz und eine hohe Performance standen dabei im Mittelpunkt. Weitere Highlights sind: - **Flexibel einsetzbar**: Kataloge im JSON-Format lassen sich einfach austauschen. - **Sechs Fragetypen**: Sortieren, Zuordnen, Multiple Choice, Swipe-Karten, Foto mit Texteingabe und \"Hätten Sie es gewusst?\"-Karten. - **QR-Code-Login & Dunkelmodus** für komfortables Spielen auf allen Geräten. - **Persistente Speicherung** in PostgreSQL. Mandantenfunktionen ------------------- Die App kann mehrere Organisationen gleichzeitig bedienen. Jeder Mandant wird durch eine Subdomain repräsentiert und erhält beim Anlegen ein eigenes Schema in PostgreSQL, das mittels Migrationen automatisch erstellt wird."}
{"id": "index:0001", "source": "/workspace/sommerfest-quiz/docs/index.md", "title": "QuizRace", "chunk_index": 1, "word_count": 158, "text": "Spielen auf allen Geräten. - **Persistente Speicherung** in PostgreSQL. Mandantenfunktionen ------------------- Die App kann mehrere Organisationen gleichzeitig bedienen. Jeder Mandant wird durch eine Subdomain repräsentiert und erhält beim Anlegen ein eigenes Schema in PostgreSQL, das mittels Migrationen automatisch erstellt wird. API-Endpunkte ------------- - **POST /tenants** – legt einen neuen Mandanten samt Schema an. - **DELETE /tenants** – entfernt einen bestehenden Mandanten und löscht das Schema. - **POST /api/renew-ssl** – erneuert das Zertifikat der Admin-Domain und startet den Hauptcontainer neu. - **POST /api/tenants/{slug}/renew-ssl** – erneuert das SSL-Zertifikat der Subdomain und triggert dabei den internen Reload-Service. Beispiel-Anfragen ----------------- Hinweise zu Umgebungsvariablen ------------------------------ Die Mandanten-Logik nutzt folgende Variablen aus .env oder sample.env: - COMPOSE_PROJECT_NAME hält den Docker-Compose-Projektnamen stabil, damit Container und Volumes bei Updates weiterverwendet werden. - DOMAIN legt die Basis-Domain für alle Mandanten fest. - MAIN_DOMAIN definiert die Hauptdomain des Quiz-Containers. - POSTGRES_DSN, POSTGRES_USER und POSTGRES_PASSWORD bestimmen den Datenbankzugang. Anmelde-Workflow ---------------- Setze in .env zuerst MAIN_DOMAIN auf die öffentliche Marketing-Domain:"}
{"id": "index:0002", "source": "/workspace/sommerfest-quiz/docs/index.md", "title": "QuizRace", "chunk_index": 2, "word_count": 161, "text": "Volumes bei Updates weiterverwendet werden. - DOMAIN legt die Basis-Domain für alle Mandanten fest. - MAIN_DOMAIN definiert die Hauptdomain des Quiz-Containers. - POSTGRES_DSN, POSTGRES_USER und POSTGRES_PASSWORD bestimmen den Datenbankzugang. Anmelde-Workflow ---------------- Setze in .env zuerst MAIN_DOMAIN auf die öffentliche Marketing-Domain: Ein neuer Mandant lässt sich anschließend mit scripts/create_tenant.sh registrieren. Alternativ funktioniert auch ein POST auf /tenants. Beide Aufrufe müssen von der Hauptdomain aus erfolgen, andernfalls antwortet der Server mit 403. Die Marketing-Seite /landing ist nur auf der in MAIN_DOMAIN hinterlegten Domain verfügbar. Wird eine Subdomain aufgerufen, erhält der Browser stattdessen einen 404-Status. Service-Accounts ---------------- Service-Accounts eignen sich für automatisierte Abläufe. Sie lassen sich wie normale Benutzer über /users.json anlegen. Dabei wird als Rolle service-account gesetzt. Authentifiziert wird ein Service-Account über die JSON-Variante von /login. Die Sitzungskücke aus der Antwort muss bei weiteren API-Aufrufen mitgesendet werden. Soll der Account für den Onboarding-Assistenten genutzt werden (Variablen SERVICE_USER und SERVICE_PASS), benötigt er mindestens die Rolle service-account. Damit kann der Assistent Standarddaten importieren (POST /restore-default)."}
{"id": "index:0003", "source": "/workspace/sommerfest-quiz/docs/index.md", "title": "QuizRace", "chunk_index": 3, "word_count": 60, "text": "JSON-Variante von /login. Die Sitzungskücke aus der Antwort muss bei weiteren API-Aufrufen mitgesendet werden. Soll der Account für den Onboarding-Assistenten genutzt werden (Variablen SERVICE_USER und SERVICE_PASS), benötigt er mindestens die Rolle service-account. Damit kann der Assistent Standarddaten importieren (POST /restore-default). Weitere Seiten -------------- - Wie läuft das Spiel? - FAQ - Datenschutz - Impressum - Lizenz - Migrationen - Landing-Seiten-Stile"}
{"id": "landing-style-overrides:0000", "source": "/workspace/sommerfest-quiz/docs/landing-style-overrides.md", "title": "CSS-Variablen der Landing-Seite", "chunk_index": 0, "word_count": 50, "text": "CSS-Variablen der Landing-Seite ------------------------------- Die Marketing-Seite nutzt eigene CSS-Variablen, um Farben für Text und Dropdown-Menüs festzulegen. Die Werte werden direkt im Template templates/marketing/landing.twig innerhalb eines :root-Blocks gesetzt: Diese Variablen steuern die Palette der Topbar sowie der Konfigurations-Dropdowns. Anpassungen an der Landing-Seite erfolgen über diese Variablen, damit alle Komponenten konsistent bleiben."}
{"id": "lizenz:0000", "source": "/workspace/sommerfest-quiz/docs/lizenz.md", "title": "Diese Anwendung steht unter einer proprietären Lizenz. Alle Rechte liegen bei René Buske. Weitere Informationen finden Sie in der Datei LICENSE.", "chunk_index": 0, "word_count": 120, "text": "Diese Anwendung steht unter einer proprietären Lizenz. Alle Rechte liegen bei René Buske. Weitere Informationen finden Sie in der Datei LICENSE. Disclaimer / Hinweis -------------------- Die Sommerfeier 2025 Quiz-App ist das Ergebnis einer Zusammenarbeit zwischen menschlicher Erfahrung und künstlicher Intelligenz. Während Ideen, Organisation und Praxiswissen von Menschen stammen, wurden alle Codezeilen von OpenAI Codex geschrieben. Für die Konzepte kam ChatGPT zum Einsatz, bei der Fehlersuche half GitHub Copilot und das Logo wurde von der KI Sora entworfen. Diese App wurde im Rahmen einer Machbarkeitsstudie entwickelt, um das Potenzial moderner Codeassistenten zu erproben. Barrierefreiheit, Datenschutz und hohe Performance standen im Mittelpunkt. Mit dieser App zeigen wir, was heute möglich ist, wenn Menschen und KI gemeinsam digitale Ideen entwickeln. Proprietäre Lizenz ------------------"}
{"id": "migrationen:0000", "source": "/workspace/sommerfest-quiz/docs/migrationen.md", "title": "Datenbank-Migrationen", "chunk_index": 0, "word_count": 36, "text": "Datenbank-Migrationen --------------------- Datenbankänderungen werden als SQL-Dateien im Verzeichnis migrations/ verwaltet. Um alle offenen Migrationen anzuwenden, steht das Skript scripts/run_migrations.php bereit: Das Skript führt neue Migrationen in chronologischer Reihenfolge aus und protokolliert sie in der Tabelle migrations."}
{"id": "implementation-journal:0000", "source": "/workspace/sommerfest-quiz/docs/rag-chatbot/implementation-journal.md", "title": "RAG Chatbot – Implementation Journal", "chunk_index": 0, "word_count": 111, "text": "RAG Chatbot – Implementation Journal ------------------------------------ Dieses Journal begleitet den Aufbau eines Retrieval-Augmented-Generation-Chatbots für die QuizRace-Dokumentation. Die Arbeit ist in fünf Phasen gegliedert. Dieses Journal beschreibt die Umsetzung von **Phase 1** bis **Phase 5**. Phase 1: Wissensbasis vorbereiten --------------------------------- Ziele der ersten Phase: - Markdown- und HTML-Quellen aus dem Repository automatisch einlesen. - Inhalte vereinheitlichen (Links, Code-Blöcke, Frontmatter entfernen) und in reinen Text umwandeln. - Texte in überschneidungsfreie, aber überlappende Chunks geeigneter Länge aufteilen. - Das Ergebnis als strukturierte JSONL-Datei mit Metadaten („Source“, Wortanzahl, Chunk-Index) abspeichern. - Einen wiederholbaren CLI-Workflow schaffen, der Statistiken über die erzeugte Wissensbasis ausgibt. Diese Schritte bilden die Grundlage für Phasen 2 und 3 (Embedding/Retrieval sowie Chat-Interface)."}
{"id": "implementation-journal:0001", "source": "/workspace/sommerfest-quiz/docs/rag-chatbot/implementation-journal.md", "title": "RAG Chatbot – Implementation Journal", "chunk_index": 1, "word_count": 170, "text": "geeigneter Länge aufteilen. - Das Ergebnis als strukturierte JSONL-Datei mit Metadaten („Source“, Wortanzahl, Chunk-Index) abspeichern. - Einen wiederholbaren CLI-Workflow schaffen, der Statistiken über die erzeugte Wissensbasis ausgibt. Diese Schritte bilden die Grundlage für Phasen 2 und 3 (Embedding/Retrieval sowie Chat-Interface). Umsetzungsschritte ------------------ - Neues Python-Modul rag_chatbot/ eingeführt, das Loader, Normalizer und Chunker kapselt. - CLI-Skript scripts/build_rag_corpus.py erstellt: - Standardmäßig werden relevante Dokumentationsquellen (README.md, alle Markdown-Dateien in docs/ sowie HTML-Seiten in content/) verarbeitet. - Parameter für Chunk-Größe, Überlappung und Ausgabeort lassen sich über Kommandozeilenargumente anpassen. - Nach erfolgreichem Lauf entstehen eine JSONL-Datei (data/rag-chatbot/corpus.jsonl) und eine Zusammenfassung der wichtigsten Kennzahlen (Anzahl Dokumente/Chunks, durchschnittliche Wortzahl). - Automatisierte Tests (tests/test_rag_chunker.py) stellen sicher, dass Chunking und Export deterministisch funktionieren. Phase 2: Semantischen Index aufbauen ------------------------------------ Ziele der zweiten Phase: - Die erstellte Wissensbasis automatisiert in einen numerischen Vektorraum überführen. - Einen semantischen Index generieren, der für jede Textpassage TF-IDF-Vektoren und Normen speichert. - Eine Retrieval-API bereitstellen, die für Anfragen ähnliche Chunks per Kosinus-Ähnlichkeit findet. - Den Workflow als CLI-Skript reproduzierbar machen und mit Tests absichern."}
{"id": "implementation-journal:0002", "source": "/workspace/sommerfest-quiz/docs/rag-chatbot/implementation-journal.md", "title": "RAG Chatbot – Implementation Journal", "chunk_index": 2, "word_count": 171, "text": "einen numerischen Vektorraum überführen. - Einen semantischen Index generieren, der für jede Textpassage TF-IDF-Vektoren und Normen speichert. - Eine Retrieval-API bereitstellen, die für Anfragen ähnliche Chunks per Kosinus-Ähnlichkeit findet. - Den Workflow als CLI-Skript reproduzierbar machen und mit Tests absichern. Umsetzungsschritte ------------------ - Neues Modul rag_chatbot/index_builder.py eingeführt: - Tokenisiert alle Chunks aus der JSONL-Wissensbasis, filtert kurze Terme und baut ein Vokabular. - Berechnet TF-IDF-Gewichte samt Normen und speichert Index, Vokabular und Metadaten als JSON. - Liefert Statistiken zur Indexgröße über IndexResult. - Retrieval-Layer rag_chatbot/retrieval.py implementiert: - SemanticIndex lädt den JSON-Index, rekonstruiert Sparse-Vektoren und beantwortet Suchanfragen. - search() liefert sortierte SearchResult-Objekte inklusive Score, Text und Metadaten. - CLI-Tool scripts/build_rag_index.py ergänzt, um den Index mit optionalen Parametern (--max-features, --min-term-length) zu erzeugen. - Neue Tests (tests/test_rag_index.py) prüfen Indexaufbau, Fehlerfälle und Retrieval-Relevanz. Phase 3: Chat-Interface mit Kontextverwaltung --------------------------------------------- Ziele der dritten Phase: - Eine Konversationsschicht ergänzen, die vorherige Nutzer- und Assistentenantworten verwaltet. - Kontext aus dem semantischen Index automatisch zum Prompt hinzufügen. - Ein CLI-Frontend bereitstellen, das die wichtigsten Parameter (Top-K, Mindestscore, Verlaufslänge) konfigurierbar macht."}
{"id": "implementation-journal:0003", "source": "/workspace/sommerfest-quiz/docs/rag-chatbot/implementation-journal.md", "title": "RAG Chatbot – Implementation Journal", "chunk_index": 3, "word_count": 163, "text": "mit Kontextverwaltung --------------------------------------------- Ziele der dritten Phase: - Eine Konversationsschicht ergänzen, die vorherige Nutzer- und Assistentenantworten verwaltet. - Kontext aus dem semantischen Index automatisch zum Prompt hinzufügen. - Ein CLI-Frontend bereitstellen, das die wichtigsten Parameter (Top-K, Mindestscore, Verlaufslänge) konfigurierbar macht. Umsetzungsschritte ------------------ - Neues Modul rag_chatbot/chat.py mit ChatSession, ChatPrompt und ChatTurn implementiert. Die Klasse fasst Kontextpassagen zusammen, verwaltet die Historie in einem begrenzten Fenster und liefert strukturierte Prompts für LLM-Aufrufe. - CLI-Tool scripts/rag_chat.py ergänzt. Es lädt den Index, startet eine interaktive Konsole und generiert Antworten auf Basis der gefundenen Kontext-Chunks. Parameter wie --top-k, --min-score und --history-limit steuern Verhalten und Trefferqualität. - Automatisierter Test tests/test_rag_chat.py sichert das neue Verhalten ab (Prompt-Aufbau, Kontextintegration, Historienbegrenzung und Fehlerfälle). Phase 4: Auswertung und Gesprächsprotokolle ------------------------------------------- Ziele der vierten Phase: - Chatverläufe strukturiert erfassen, um Antwortqualität und Quellenabdeckung zu bewerten. - Eine Auswertung bereitstellen, die Statistiken über Kontexte und genutzte Quellen liefert. - Einen reproduzierbaren Batch-Workflow schaffen, der mehrere Fragen gegen den Index laufen lässt und die Ergebnisse speichert."}
{"id": "implementation-journal:0004", "source": "/workspace/sommerfest-quiz/docs/rag-chatbot/implementation-journal.md", "title": "RAG Chatbot – Implementation Journal", "chunk_index": 4, "word_count": 151, "text": "Phase: - Chatverläufe strukturiert erfassen, um Antwortqualität und Quellenabdeckung zu bewerten. - Eine Auswertung bereitstellen, die Statistiken über Kontexte und genutzte Quellen liefert. - Einen reproduzierbaren Batch-Workflow schaffen, der mehrere Fragen gegen den Index laufen lässt und die Ergebnisse speichert. Umsetzungsschritte ------------------ - Neues Modul rag_chatbot/transcript.py implementiert. Es enthält ChatTranscript zur Aufzeichnung von Chat-Runden, inklusive Hilfsklassen für Kontextdaten und Statistikberechnung. - ChatSession akzeptiert optional ein ChatTranscript und protokolliert automatisch jede Anfrage mitsamt Prompt, Antwort und Kontexttreffern. - CLI-Skript scripts/rag_eval.py ergänzt, um Fragenstapel aus einer Textdatei gegen den semantischen Index auszuführen und das erzeugte Transcript als JSON zu speichern. - Neue Tests (tests/test_rag_transcript.py) prüfen die Aufzeichnung, Statistikberechnung und den JSON-Export der Gesprächsprotokolle. Phase 5: Berichte und Qualitätsmetriken --------------------------------------- Ziele der fünften Phase: - Gesprächsprotokolle automatisiert auswerten und die wichtigsten Kennzahlen hervorheben. - Quellenabdeckung sichtbar machen, um blinde Flecken in der Wissensbasis aufzudecken. - Einen leicht nutzbaren CLI-Workflow schaffen, der vorhandene Transkripte zusammenfasst."}
{"id": "implementation-journal:0005", "source": "/workspace/sommerfest-quiz/docs/rag-chatbot/implementation-journal.md", "title": "RAG Chatbot – Implementation Journal", "chunk_index": 5, "word_count": 174, "text": "Phase 5: Berichte und Qualitätsmetriken --------------------------------------- Ziele der fünften Phase: - Gesprächsprotokolle automatisiert auswerten und die wichtigsten Kennzahlen hervorheben. - Quellenabdeckung sichtbar machen, um blinde Flecken in der Wissensbasis aufzudecken. - Einen leicht nutzbaren CLI-Workflow schaffen, der vorhandene Transkripte zusammenfasst. Umsetzungsschritte ------------------ - Neues Modul rag_chatbot/report.py implementiert. Es erzeugt strukturierte Berichte mit Trefferanzahl, Durchschnitts- und Maximal-Scores pro Quelle und stellt eine menschenlesbare Ausgabe bereit. - ChatTranscript um Ladefunktionen (from_dict, load) erweitert, damit gespeicherte JSON-Dateien direkt wieder eingelesen werden können. TranscriptContext und TranscriptTurn besitzen nun passende from_dict-Hilfsfunktionen. - CLI-Skript scripts/rag_report.py ergänzt. Es lädt ein Transcript, erzeugt den Bericht und gibt ihn als Text oder JSON aus. Parameter wie --top steuern die Anzahl der angezeigten Quellen. - Neue Tests (tests/test_rag_report.py) prüfen Report-Erstellung, Formatierung und den Roundtrip zwischen Speichern und Laden eines Transkripts. Phase 6: Automatisierter Pipeline-Workflow ------------------------------------------ Ziele der sechsten Phase: - Wissensbasis und semantischen Index in einem wiederholbaren Schritt aktualisieren. - Änderungen an den Dokumentationsquellen automatisch erkennen und nur notwendige Schritte neu ausführen. - Den Workflow über ein CLI-Werkzeug ansteuerbar machen und durch Tests absichern."}
{"id": "implementation-journal:0006", "source": "/workspace/sommerfest-quiz/docs/rag-chatbot/implementation-journal.md", "title": "RAG Chatbot – Implementation Journal", "chunk_index": 6, "word_count": 113, "text": "------------------------------------------ Ziele der sechsten Phase: - Wissensbasis und semantischen Index in einem wiederholbaren Schritt aktualisieren. - Änderungen an den Dokumentationsquellen automatisch erkennen und nur notwendige Schritte neu ausführen. - Den Workflow über ein CLI-Werkzeug ansteuerbar machen und durch Tests absichern. Umsetzungsschritte ------------------ - Neues Modul rag_chatbot/pipeline.py entwickelt. Es bündelt Konfiguration (PipelineOptions), Ergebnisobjekte (PipelineResult) und die Funktion run_pipeline(), die auf Basis von Zeitstempeln entscheidet, ob Wissensbasis oder Index neu erzeugt werden müssen. - Skript scripts/rag_pipeline.py hinzugefügt. Es kombiniert Corpus- und Indexaufbau in einer Kommandozeilenoberfläche, erlaubt optionale Parameter (Chunk-Größe, Vokabularbegrenzung, --force) und informiert, ob Schritte übersprungen wurden. - Ergänzende Tests (tests/test_rag_pipeline.py) prüfen Neuaufbau, Überspringen unveränderter Artefakte, das Erzwingen von Rebuilds sowie Fehlerbehandlung bei fehlenden Quellen."}
{"id": "seo-hooks:0000", "source": "/workspace/sommerfest-quiz/docs/seo-hooks.md", "title": "SEO Hooks", "chunk_index": 0, "word_count": 98, "text": "SEO Hooks --------- Neue SEO-Features können über Events eingebunden werden. Bei Änderungen der Seiteneinstellungen werden Events aus dem Domain-Layer ausgelöst, die Listener im Application-Layer verarbeiten. Verfügbare Events ----------------- - SeoConfigSaved – Wird ausgelöst, wenn eine SEO-Konfiguration erstmals gespeichert wird. - SeoConfigUpdated – Wird ausgelöst, wenn eine bestehende Konfiguration aktualisiert wird. Listener registrieren --------------------- Listener befinden sich im Verzeichnis src/Application/EventListener/. Ein Listener registriert sich am EventDispatcher und reagiert auf die oben genannten Events. Beispiel: Im Listener können Aktionen wie Cache-Invalidierung oder Pings an externe Dienste implementiert werden. Eigene Listener können analog aufgebaut und über addListener am Dispatcher registriert werden."}
{"id": "seo-sef-overview:0000", "source": "/workspace/sommerfest-quiz/docs/seo-sef-overview.md", "title": "SEO- & SEF-Überblick", "chunk_index": 0, "word_count": 142, "text": "SEO- & SEF-Überblick -------------------- Dieses Dokument beschreibt Anforderungen, erwartete Ergebnisse und Erfolgsmetriken für die geplante Suchmaschinenoptimierung (SEO) und Search-Engine-Friendly (SEF) Umsetzung. Anforderungen ------------- - URLs sollen eindeutig, sprechend und ohne überflüssige Parameterstrukturen sein. - Jede Seite enthält strukturierte Meta-Tags (Titel, Beschreibung, OpenGraph). - Inhalte sind für Crawler zugänglich und werden performant ausgeliefert. Erwartete Ergebnisse -------------------- - Besucher gelangen über organische Suchtreffer schneller zu relevanten Inhalten. - Die Website wird durch Suchmaschinen vollständig indexiert. - Das Nutzererlebnis verbessert sich durch klar strukturierte URLs und Meta-Informationen. Erfolgsmetriken --------------- - Steigerung der Click-Through-Rate (CTR) bei organischen Suchergebnissen. - Verbesserung des Rankings für definierte Keywords (z. B. Top 10 bei Google). - Reduktion der Absprungrate. - Höhere Anzahl indexierter Seiten im Vergleichszeitraum. Abstimmung und weitere Schritte ------------------------------- Dieses Dokument dient als Grundlage für die spätere Implementierung und zugehörige Tests. Anpassungen werden im Rahmen der Umsetzung abgestimmt."}
{"id": "spielablauf:0000", "source": "/workspace/sommerfest-quiz/docs/spielablauf.md", "title": "So funktioniert das Spiel", "chunk_index": 0, "word_count": 5, "text": "So funktioniert das Spiel -------------------------"}
{"id": "spielablauf:0001", "source": "/workspace/sommerfest-quiz/docs/spielablauf.md", "title": "So funktioniert das Spiel", "chunk_index": 1, "word_count": 180, "text": "So funktioniert das Spiel ------------------------- Es gibt verschiedene Stationen, die auf einer Karte markiert sind. An jeder Station scannt ihr mit dem Smartphone den dort angebrachten QR-Code und öffnet den Link – und schon kann es losgehen. - **QR-Code scannen** – Nach dem Öffnen des Stations-Links scannt ihr euren Team-QR-Code. Nur bekannte Teams werden zugelassen. - **Quiz starten** – Nach dem erfolgreichen Login startet automatisch der passende Fragenkatalog für die Station. Ein einmal gelöster Katalog kann während der Rally nicht noch einmal gestartet werden. - **Fragen beantworten** – Jede Frage zeigt nur den Button \"Weiter\". Die Antwort wird direkt überprüft. Ob sie richtig war, erfahrt ihr am Ende des jeweiligen Katalogs. - **Buchstabe sammeln** – Nach jeder Runde erscheint ein Buchstabe, der Teil des Rätselworts ist. Schritt für Schritt ergibt sich die Lösung. - **Rätseln & Foto hochladen** – Wer das Rätselwort errät, kann es direkt eingeben. Es kann außerdem ein Beweisfoto hochgeladen werden. Die kreativsten Teamfotos werden am Ende prämiert. - **Ergebnisse & Rangliste** – Nach Abschluss aller Stationen erscheint ein Link zur persönlichen Ergebnisübersicht. Dort oder im Adminbereich"}
{"id": "spielablauf:0002", "source": "/workspace/sommerfest-quiz/docs/spielablauf.md", "title": "So funktioniert das Spiel", "chunk_index": 2, "word_count": 62, "text": "das Rätselwort errät, kann es direkt eingeben. Es kann außerdem ein Beweisfoto hochgeladen werden. Die kreativsten Teamfotos werden am Ende prämiert. - **Ergebnisse & Rangliste** – Nach Abschluss aller Stationen erscheint ein Link zur persönlichen Ergebnisübersicht. Dort oder im Adminbereich gibt es eine Rangliste mit den besten Platzierungen. Viel Spaß bei der Rally, beim Raten, Punkte sammeln und natürlich beim gemeinsamen Mitfiebern!"}
{"id": "table-framework:0000", "source": "/workspace/sommerfest-quiz/docs/table-framework.md", "title": "Table Framework", "chunk_index": 0, "word_count": 120, "text": "Table Framework --------------- Die Listenansichten nutzen den Twig-Makro qr_rowcards und den JavaScript-TableManager zur Darstellung als Karten. Makro ----- qr_rowcards(list_id, sortable=true, list_class='uk-hidden@m uk-list', tag='ul') erzeugt einen leeren Container für Karten. TableManager ------------ Optionen -------- - columns: Spaltendefinitionen (key, className, render, renderCard, editable, ariaDesc). - mobileCards: Objekt mit container und optional eigener render-Funktion. - sortable: Aktiviert Drag-and-Drop für Karten. - onEdit, onDelete, onReorder: Callback-Funktionen für Aktionen. Mobile Aktionsmenüs ------------------- Enthält eine Karte mehrere Elemente mit der Klasse qr-action, fasst der TableManager diese automatisch in einem aufklappbaren Menü zusammen. Barrierefreiheit ---------------- - qr_rowcards erzeugt eine Liste für mobile Kartenansichten. - TableManager setzt role=\"row\" und role=\"gridcell\" für Karten und Zellen. - Sortier-Handle und Lösch-Buttons erhalten ein aria-label. - uk-sortable ermöglicht Drag-and-Drop innerhalb der Karten."}
{"id": "datenschutz:0000", "source": "/workspace/sommerfest-quiz/content/datenschutz.html", "title": "Datenschutzerklärung", "chunk_index": 0, "word_count": 121, "text": "Datenschutzerklärung 1. Verantwortlicher Verantwortlich für die Datenverarbeitung im Rahmen dieser Anwendung ist: [NAME] [STREET] [ZIP] [CITY] E-Mail: [EMAIL] 2. Zweck der Datenverarbeitung Die Quiz-App dient der Durchführung eines digitalen Quiz im Rahmen der Sommerfeier 2025. Die Erhebung und Verarbeitung von Daten erfolgt ausschließlich zur Bereitstellung und Verbesserung des Quiz-Angebots. 3. Art und Umfang der erhobenen Daten Keine Erhebung personenbezogener Daten: Es werden keinerlei personenbezogene Daten (wie Name, E-Mail, Adresse etc.) abgefragt, gespeichert oder verarbeitet. Quiz-Daten: Bei der Nutzung der App werden lediglich pseudonymisierte Daten wie frei gewählte Benutzernamen, erzielte Punktzahlen und ggf. technische Informationen zum Ablauf des Quiz verarbeitet. Serverdatei ([Veranstaltungsname].csv): Bei aktivierter Speicherung werden Pseudonyme, Katalogname, Versuch, Punktzahl und Zeitpunkt serverseitig gesichert. Die Ablage erfolgt anonymisiert und konform zur DSGVO."}
{"id": "datenschutz:0001", "source": "/workspace/sommerfest-quiz/content/datenschutz.html", "title": "Datenschutzerklärung", "chunk_index": 1, "word_count": 165, "text": "lediglich pseudonymisierte Daten wie frei gewählte Benutzernamen, erzielte Punktzahlen und ggf. technische Informationen zum Ablauf des Quiz verarbeitet. Serverdatei ([Veranstaltungsname].csv): Bei aktivierter Speicherung werden Pseudonyme, Katalogname, Versuch, Punktzahl und Zeitpunkt serverseitig gesichert. Die Ablage erfolgt anonymisiert und konform zur DSGVO. 4. Speicherung und Löschung Serverseitige Speicherung: Je nach Konfiguration werden Quiz-Ergebnisse anonymisiert auf dem Server gespeichert. Diese Speicherung erfolgt entsprechend den Anforderungen der DSGVO. Lokal gespeicherte Daten: Sofern lokal gespeichert wird (z. B. im Browser-Storage), verbleiben die Daten ausschließlich auf dem Endgerät des Nutzers und werden nicht an Dritte übermittelt. Löschung: Alle gespeicherten Daten werden spätestens nach Abschluss des Quiz-Events gelöscht oder anonymisiert. 5. Keine Weitergabe an Dritte Es findet keine Übermittlung oder Weitergabe von Daten an Dritte statt. 6. Cookies und Tracking Die App setzt ein technisch notwendiges Session-Cookie (PHPSESSID), das für den Betrieb erforderlich ist – etwa für den Admin-Login. Dieses Cookie enthält keine personenbezogenen Daten und wird nach Beenden des Browsers gelöscht. Ein darüber hinaus gehendes Tracking zur Nutzerverfolgung findet nicht statt."}
{"id": "datenschutz:0002", "source": "/workspace/sommerfest-quiz/content/datenschutz.html", "title": "Datenschutzerklärung", "chunk_index": 2, "word_count": 119, "text": "setzt ein technisch notwendiges Session-Cookie (PHPSESSID), das für den Betrieb erforderlich ist – etwa für den Admin-Login. Dieses Cookie enthält keine personenbezogenen Daten und wird nach Beenden des Browsers gelöscht. Ein darüber hinaus gehendes Tracking zur Nutzerverfolgung findet nicht statt. 7. Rechte der Nutzer Da keine personenbezogenen Daten verarbeitet werden, bestehen keine Betroffenenrechte im Sinne der DSGVO bezüglich Auskunft, Berichtigung, Löschung oder Übertragbarkeit. 8. Kontakt Für Fragen zum Datenschutz oder zur Anwendung wenden Sie sich bitte an: [EMAIL] Hinweis: Diese Datenschutzerklärung basiert auf dem aktuellen Stand der Technik und des Projekts. CalHelp übernimmt keine Verantwortung für bereits durch Administrator:innen eingegebene personenbezogene Daten. Sollte sich der Funktionsumfang ändern oder die App personenbezogene Daten erheben, ist eine Anpassung dieser Datenschutzerklärung erforderlich."}
{"id": "faq:0000", "source": "/workspace/sommerfest-quiz/content/faq.html", "title": "FAQ", "chunk_index": 0, "word_count": 145, "text": "FAQ Hier beantworten wir häufige Fragen zur Nutzung des QuizRace. Allgemeines Wie starte ich das Quiz? Scanne an der ersten Station den QR-Code oder öffne den bereitgestellten Link. Wähle den Name aus und schon geht es los. Kann ich das Quiz unterwegs spielen? Ja, die Oberfläche passt sich jedem Gerät an – ob Handy, Tablet oder PC. Welche Fragetypen gibt es? Das Quiz bietet Sortieren, Zuordnen, Multiple Choice, Swipe-Karten, Foto mit Texteingabe und \"Hätten Sie es gewusst?\"-Karten. Wie bediene ich Drag &amp; Drop? Halte ein Element gedrückt und ziehe es an die gewünschte Stelle. Gibt es einen Dunkelmodus? Ja. Über das Mond-Symbol oben rechts lässt sich die dunkle Ansicht einschalten. Was passiert mit meinen Ergebnissen? Die Punkte werden anonym gezählt und können am Ende als Statistik exportiert werden. Warum wurde das Quiz entwickelt? Es zeigt, wie Menschen und KI gemeinsam neue digitale Möglichkeiten schaffen können."}
{"id": "faq:0001", "source": "/workspace/sommerfest-quiz/content/faq.html", "title": "FAQ", "chunk_index": 1, "word_count": 111, "text": "sich die dunkle Ansicht einschalten. Was passiert mit meinen Ergebnissen? Die Punkte werden anonym gezählt und können am Ende als Statistik exportiert werden. Warum wurde das Quiz entwickelt? Es zeigt, wie Menschen und KI gemeinsam neue digitale Möglichkeiten schaffen können. Unser Anspruch Bei der Entwicklung wurde besonders geachtet auf: Barrierefreiheit: Die App ist auch für Menschen mit Einschränkungen gut nutzbar. Datenschutz: Die Daten werden vertraulich behandelt. Schnelle und stabile Nutzung: Die Anwendung läuft zuverlässig, auch bei vielen Teilnehmenden. Einfache Bedienung: Alle Funktionen sind selbsterklärend. Funktioniert auf allen Geräten: Handy, Tablet oder PC – freie Wahl. Nachhaltigkeit: Die App wurde ressourcenschonend umgesetzt. Offene Schnittstellen: Sie lässt sich leicht mit anderen Systemen verbinden."}
{"id": "impressum:0000", "source": "/workspace/sommerfest-quiz/content/impressum.html", "title": "Impressum", "chunk_index": 0, "word_count": 95, "text": "Impressum Angaben gemäß § 5 TMG [NAME] [STREET] [ZIP] [CITY] Deutschland E-Mail: [EMAIL] Verantwortlich für den Inhalt nach § 55 Abs. 2 RStV: [NAME] [STREET] [ZIP] [CITY] Umsatzsteuer-Identifikationsnummer gemäß § 27 a Umsatzsteuergesetz: DE 259645623 Haftungsausschluss Trotz sorgfältiger inhaltlicher Kontrolle übernehmen wir keine Haftung für die Inhalte externer Links. Für den Inhalt der verlinkten Seiten sind ausschließlich deren Betreiber verantwortlich. Urheberrecht Die durch den Seitenbetreiber erstellten Inhalte und Werke auf dieser Website unterliegen dem deutschen Urheberrecht. Beiträge Dritter sind als solche gekennzeichnet. Quellcode Der Quellcode dieser Anwendung ist unter der MIT-Lizenz auf GitHub verfügbar: https://github.com/bastelix/sommerfest-quiz"}
{"id": "landing:0000", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 0, "word_count": 174, "text": "Vertrauen von Teams &amp; Events &bdquo;Super Teamtag &ndash; alle waren begeistert.&ldquo; Eventagentur Berlin &bdquo;Unsere Sch&uuml;ler*innen hatten richtig Spa&szlig;.&ldquo; Oberschule K&ouml;ln &bdquo;Einfache Organisation und tolles Feedback.&ldquo; Stadtfest Leipzig So funktioniert&rsquo;s So einfach wird aus einer Idee ein unvergesslicher Moment. Schritt 1 – Die Idee entsteht 🌱 „Es soll etwas Besonderes werden – aber noch fehlt die zündende Idee?“Wir pflanzen den ersten Gedanken: Schatzsuche oder Stadtrallye – wie eine Entdeckungstour, bei der jede Station ein neues Rätsel enthüllt Escape-Quiz – wie ein Abenteuer, bei dem Codes geknackt und Geheimnisse gelüftet werden Team-Challenge – wie ein Wettkampf, bei dem Gruppen gegeneinander antreten und Punkte sammeln 👉 Aus diesem Funken wächst Ihr persönliches Event. Schritt 2 – Der Startschuss 🚀 „Die Teams sind gespannt – jetzt beginnt das Spiel.“So einfach geht’s: QR-Aufkleber platzieren – wie kleine Hinweise, die an Türen, Wänden oder Objekten warten Ein Scan genügt – wie ein Schlüssel, der sofort die passende Aufgabe öffnet Keine App, kein Aufwand – wie ein spontanes Spiel, das überall sofort funktioniert 👉 Mit wenigen Handgriffen ist Ihr Event live."}
{"id": "landing:0001", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 1, "word_count": 161, "text": "an Türen, Wänden oder Objekten warten Ein Scan genügt – wie ein Schlüssel, der sofort die passende Aufgabe öffnet Keine App, kein Aufwand – wie ein spontanes Spiel, das überall sofort funktioniert 👉 Mit wenigen Handgriffen ist Ihr Event live. Schritt 3 – Das Finale 🏆 „Alle fiebern der Auswertung entgegen – die Spannung steigt.“Jetzt zeigt sich, wer vorne liegt: Live-Ranking auf Knopfdruck – wie eine Siegerehrung in Echtzeit Urkunden und Reports – wie ein Erinnerungsalbum, sofort erstellt und teilbar Applaus &amp; Gänsehaut-Momente – wie ein Abschluss, der lange in Erinnerung bleibt 👉 So endet Ihr Event mit einem Highlight. Event starten Demo ansehen Szenarien &amp; Anwendungsfälle Von der Schnitzeljagd bis zum Schulfest – QuizRace passt sich an. Schnitzeljagd Teamtag Schulfeier Messe-Quiz Onboarding Sommerfest Fundraising Teambuilding Firmenfeier Weihnachtsfeier Stadtfest Vereinsfest Kindergeburtstag Workshop Kick-off Produktlaunch Sportfest Trainings Schnitzeljagd / Stadtrallye Orte &amp; Aufgaben kombinieren, Foto-Missionen einbauen, Punkte live sammeln – ideal für Stadt, Campus oder Gelände. QR-Stationen &amp; Hinweise Rätselwort am Ende"}
{"id": "landing:0002", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 2, "word_count": 173, "text": "Messe-Quiz Onboarding Sommerfest Fundraising Teambuilding Firmenfeier Weihnachtsfeier Stadtfest Vereinsfest Kindergeburtstag Workshop Kick-off Produktlaunch Sportfest Trainings Schnitzeljagd / Stadtrallye Orte &amp; Aufgaben kombinieren, Foto-Missionen einbauen, Punkte live sammeln – ideal für Stadt, Campus oder Gelände. QR-Stationen &amp; Hinweise Rätselwort am Ende Teamtag / Firmen-Event Teams bilden, Wissen &amp; Spaß kombinieren, Ergebnisse sofort anzeigen. Live-Ranking auf TV oder Beamer Urkunden als PDF Schulfeier / Projekttag Barrierefrei im Browser – ohne App. Große Gruppen spielen gleichzeitig. Einladungen per QR-Code Rollen &amp; Limits steuerbar Messe-Quiz Besucher aktiv einbinden, Aufmerksamkeit am Stand erhöhen. Fragen rund ums Unternehmen Sofortige Auswertung &amp; Gewinnspiel Onboarding Neue Mitarbeitende spielerisch einführen und Wissen abfragen. Interaktive Fragen zu Prozessen &amp; Werten Ergebnisse für HR dokumentiert Sommerfest Abwechslungsreiche Quiz-Rallye für alle Generationen – leicht umsetzbar im Freien. Kreative Aufgaben &amp; Foto-Missionen Teams spontan starten lassen Fundraising Spendenaktion spielerisch auflockern und Teilnehmende einbinden. Quizfragen rund um das Thema Ranking für extra Motivation Teambuilding Zusammenhalt durch Team-Challenges stärken. Gruppen gegeneinander antreten lassen Aufgaben für Kooperation &amp; Spaß Firmenfeier Mitarbeitende unterhalten &amp; Wissen spielerisch vermitteln. Personalisierte Quizfragen Live-Siegerehrung"}
{"id": "landing:0003", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 3, "word_count": 164, "text": "Fundraising Spendenaktion spielerisch auflockern und Teilnehmende einbinden. Quizfragen rund um das Thema Ranking für extra Motivation Teambuilding Zusammenhalt durch Team-Challenges stärken. Gruppen gegeneinander antreten lassen Aufgaben für Kooperation &amp; Spaß Firmenfeier Mitarbeitende unterhalten &amp; Wissen spielerisch vermitteln. Personalisierte Quizfragen Live-Siegerehrung Weihnachtsfeier Feierlicher Rahmen mit Quiz-Highlights. Fragen zu Firmengeschichte oder Weihnachten Urkunden als Erinnerung Stadtfest Große Gruppen einfach einbinden, flexibel steuerbar. Stationen über das ganze Fest verteilt Live-Punkte auf Großbildschirm Vereinsfest Mitglieder &amp; Gäste interaktiv einbeziehen. Quiz zu Vereinsgeschichte oder Sportarten Sofortige Siegerehrung Kindergeburtstag Spiele &amp; Rätsel altersgerecht gestalten, ohne App. QR-Aufkleber für jede Station Fotos &amp; kleine Aufgaben Workshop Inhalte interaktiv vermitteln und gleich prüfen. Quizfragen zum Thema Feedback in Echtzeit Kick-off Projekte motivierend starten, alle aktiv beteiligen. Icebreaker-Quiz zum Einstieg Team-Ranking als Energizer Produktlaunch Features spielerisch vorstellen, Zielgruppe aktiv einbinden. Quiz zu Produktneuheiten Live-Umfrage für Feedback Sportfest Bewegung &amp; Wissen verbinden. QR-Stationen an Sportplätzen Punkte für Teams sammeln Trainings Trainings lebendig machen, Inhalte testen &amp; verankern. Multiple Choice &amp; Kreativfragen Reports für Trainer"}
{"id": "landing:0004", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 4, "word_count": 141, "text": "Produktlaunch Features spielerisch vorstellen, Zielgruppe aktiv einbinden. Quiz zu Produktneuheiten Live-Umfrage für Feedback Sportfest Bewegung &amp; Wissen verbinden. QR-Stationen an Sportplätzen Punkte für Teams sammeln Trainings Trainings lebendig machen, Inhalte testen &amp; verankern. Multiple Choice &amp; Kreativfragen Reports für Trainer document.addEventListener('DOMContentLoaded', () => { const slider = UIkit.slider('#scenario-slider'); const pills = Array.from(document.querySelectorAll('#scenario-nav > li')); const slides = Array.from(document.querySelectorAll('.usecase-slider > li')); function setActive(index) { pills.forEach((li, i) => li.classList.toggle('uk-active', i === index)); } function setCurrent(index) { slides.forEach((li, i) => li.classList.toggle('uk-current', i === index)); } pills.forEach((li, i) => { li.addEventListener('click', (e) => { e.preventDefault(); slider.show(i); setActive(i); setCurrent(i); }); }); UIkit.util.on('#scenario-slider', 'itemshown', () => { setActive(slider.index); setCurrent(slider.index); }); setActive(0); setCurrent(0); }); Idee gefunden – los geht’s Editor im Überblick Drag &amp; Drop Fragen einfach per Drag &amp; Drop arrangieren. Teamverwaltung Teams spontan anlegen und verwalten. Live-Vorschau Sofort sehen, wie es für Teilnehmende aussieht. Editor testen"}
{"id": "landing:0005", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 5, "word_count": 180, "text": "setActive(slider.index); setCurrent(slider.index); }); setActive(0); setCurrent(0); }); Idee gefunden – los geht’s Editor im Überblick Drag &amp; Drop Fragen einfach per Drag &amp; Drop arrangieren. Teamverwaltung Teams spontan anlegen und verwalten. Live-Vorschau Sofort sehen, wie es für Teilnehmende aussieht. Editor testen Abomodelle für jedes Event Einfacher Start – faire Preise – alle Abos 7 Tage kostenlos testen! div; cls: uk-animation-slide-right-small; delay: 150\"> Kostenlos testen Starter 9&nbsp;€/Monat Für kleine Events &amp; Einsteiger 1 Event gleichzeitig 5 Teams &amp; 5 Kataloge à 5 Fragen Unbegrenzte Teilnehmende pro Team¹ Live-Ranking &amp; Basis-PDF-Export² Alle Fragetypen &amp; QR-Codes Backup &amp; editierbare Texte³ Jetzt starten Meist gewählt Standard 39&nbsp;€/Monat Beliebt bei Schulen &amp; Teams Alle Starter-Funktionen Bis zu 3 Events gleichzeitig 10 Teams &amp; 10 Kataloge à 10 Fragen Eigene Subdomain Vollständiger PDF-Export Jetzt starten Professional Professional 79&nbsp;€/Monat Für Agenturen &amp; Unternehmen Alle Standard-Funktionen 20 Events gleichzeitig (mehr auf Anfrage) 100 Teams &amp; 50 Kataloge à 50 Fragen White-Label &amp; Rollenverwaltung Jetzt starten Alle Preise zzgl. MwSt. – individuelle Lösungen auf Anfrage. 1 (Die Teamgröße ist nicht technisch limitiert und kann bedarfsgerecht festgelegt werden.) 2 (Im Starter-Paket"}
{"id": "landing:0006", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 6, "word_count": 57, "text": "(mehr auf Anfrage) 100 Teams &amp; 50 Kataloge à 50 Fragen White-Label &amp; Rollenverwaltung Jetzt starten Alle Preise zzgl. MwSt. – individuelle Lösungen auf Anfrage. 1 (Die Teamgröße ist nicht technisch limitiert und kann bedarfsgerecht festgelegt werden.) 2 (Im Starter-Paket mit Wasserzeichen oder ohne individuelles Layout/Logo) 3 (z.&nbsp;B. Datenschutz, AGB, Einladung, FAQ, Spielanleitung – alles eigenständig editierbar)"}
{"id": "landing:0007", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 7, "word_count": 180, "text": "Preise zzgl. MwSt. – individuelle Lösungen auf Anfrage. 1 (Die Teamgröße ist nicht technisch limitiert und kann bedarfsgerecht festgelegt werden.) 2 (Im Starter-Paket mit Wasserzeichen oder ohne individuelles Layout/Logo) 3 (z.&nbsp;B. Datenschutz, AGB, Einladung, FAQ, Spielanleitung – alles eigenständig editierbar) FAQ Wie starte ich das Quiz? Scannen Sie den ersten QR-Code oder öffnen Sie den bereitgestellten Link. Teamnamen wählen und los geht's. Brauche ich eine App? Nein, QuizRace läuft im Browser auf jedem Gerät. Welche Fragetypen gibt es? Sortieren, Zuordnen, Multiple Choice, Foto-Missionen und mehr. Kann man das Abo später ändern? Ja, ein Upgrade in ein höheres Paket ist jederzeit möglich – ohne Einschränkungen.Ein Downgrade funktioniert ebenfalls, solange die Anzahl Ihrer aktiven Events zum gewählten Paket passt. Funktioniert QuizRace auch draußen oder unterwegs? Ja, überall dort, wo mobile Daten verfügbar sind. Die QR-Codes lassen sich an Objekten oder Orten anbringen – ideal für Schnitzeljagden, Rallyes und Outdoor-Events. Wie sicher sind unsere Daten? QuizRace läuft DSGVO-konform und wird in Deutschland gehostet.Jede Organisation erhält ihre eigene Instanz (Single-Tenant).Ihre Daten bleiben vollständig unter Ihrer Kontrolle. Wie viele Teilnehmende können mitmachen? Es gibt keine"}
{"id": "landing:0008", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 8, "word_count": 143, "text": "– ideal für Schnitzeljagden, Rallyes und Outdoor-Events. Wie sicher sind unsere Daten? QuizRace läuft DSGVO-konform und wird in Deutschland gehostet.Jede Organisation erhält ihre eigene Instanz (Single-Tenant).Ihre Daten bleiben vollständig unter Ihrer Kontrolle. Wie viele Teilnehmende können mitmachen? Es gibt keine feste Grenze – ob 10 oder 1.000 Personen.Im Starter-Paket gelten kleine Limits, in höheren Abos ist nahezu alles möglich. Kann ich das Quiz individuell anpassen? Ja, Sie können Fragen, Texte und sogar das Branding anpassen.So wird jedes Quiz einzigartig – passend zu Ihrem Event. Noch Fragen? Wir sind für Sie da. Ob Testzugang, Angebot oder individuelle Beratung – wir melden uns garantiert persönlich zurück. div; cls: uk-animation-slide-right-small; delay: 150\"> Ihr Name E-Mail Nachricht {{ turnstile_widget }} Bitte bestätigen Sie, dass Sie kein Roboter sind. Ich stimme der Speicherung meiner Daten zur Bearbeitung zu. Senden &nbsp; E-Mail office [at] calhelp.de Telefon +49 33203 609080"}
{"id": "landing:0009", "source": "/workspace/sommerfest-quiz/content/landing.html", "title": "Vertrauen von Teams &amp; Events", "chunk_index": 9, "word_count": 80, "text": "zurück. div; cls: uk-animation-slide-right-small; delay: 150\"> Ihr Name E-Mail Nachricht {{ turnstile_widget }} Bitte bestätigen Sie, dass Sie kein Roboter sind. Ich stimme der Speicherung meiner Daten zur Bearbeitung zu. Senden &nbsp; E-Mail office [at] calhelp.de Telefon +49 33203 609080 document.addEventListener('DOMContentLoaded', function () { document.querySelectorAll('.js-email-link').forEach(function (anchor) { var user = anchor.getAttribute('data-user'); var domain = anchor.getAttribute('data-domain'); if (user && domain) { var email = user + '@' + domain; anchor.href = 'mailto:' + email; anchor.textContent = email; } }); }); OK"}
{"id": "lizenz:0000", "source": "/workspace/sommerfest-quiz/content/lizenz.html", "title": "Lizenz", "chunk_index": 0, "word_count": 180, "text": "Lizenz Diese Anwendung steht unter einer proprietären Lizenz. Den vollständigen Text finden Sie untenstehend sowie in der Datei LICENSE. Die kommerzielle Nutzung ist erlaubt, der Quellcode bleibt jedoch Eigentum von René Buske und darf nicht ohne vorherige schriftliche Genehmigung kopiert, verbreitet, verändert oder öffentlich zugänglich gemacht werden. Disclaimer / Hinweis Die Sommerfeier 2025 Quiz-App ist das Ergebnis einer spannenden Zusammenarbeit zwischen menschlicher Erfahrung und k&uuml;nstlicher Intelligenz. W&auml;hrend Ideen, Organisation und jede Menge Praxiswissen von Menschen stammen, wurden alle Codezeilen experimentell komplett von OpenAI Codex geschrieben. F&uuml;r die kreativen Konzepte und Inhalte kam ChatGPT 4.1 zum Einsatz, bei der Fehlersuche half Github Copilot und das Logo wurde von der KI Sora entworfen. Diese App wurde im Rahmen einer Machbarkeitsstudie entwickelt, um das Potenzial moderner Codeassistenten in der Praxis zu erproben. Im Mittelpunkt stand die Zug&auml;nglichkeit f&uuml;r alle Nutzergruppen &ndash; daher ist die Anwendung barrierefrei gestaltet und eignet sich auch f&uuml;r Menschen mit Einschr&auml;nkungen. Datenschutz und Sicherheit werden konsequent beachtet, sodass alle Daten gesch&uuml;tzt sind. Die App zeichnet sich durch eine hohe Performance und Stabilit&auml;t auch bei vielen gleichzeitigen Teilnehmenden aus. Das"}
{"id": "lizenz:0001", "source": "/workspace/sommerfest-quiz/content/lizenz.html", "title": "Lizenz", "chunk_index": 1, "word_count": 178, "text": "die Anwendung barrierefrei gestaltet und eignet sich auch f&uuml;r Menschen mit Einschr&auml;nkungen. Datenschutz und Sicherheit werden konsequent beachtet, sodass alle Daten gesch&uuml;tzt sind. Die App zeichnet sich durch eine hohe Performance und Stabilit&auml;t auch bei vielen gleichzeitigen Teilnehmenden aus. Das Bedienkonzept ist selbsterkl&auml;rend, wodurch eine schnelle und intuitive Nutzung auf allen Endger&auml;ten &ndash; ob Smartphone, Tablet oder Desktop &ndash; gew&auml;hrleistet wird. Zudem wurde auf eine ressourcenschonende Arbeitsweise und eine unkomplizierte Anbindung an andere Systeme Wert gelegt. Mit dieser App zeigen wir, was heute schon m&ouml;glich ist, wenn Menschen und verschiedene KI-Tools wie ChatGPT, Codex, Copilot und Sora gemeinsam an neuen digitalen Ideen t&uuml;fteln. Proprietäre Lizenz (Deutsch) Proprietäre Lizenz - Sommerfest Quiz Copyright (c) 2025 René Buske Alle Rechte vorbehalten. Die Nutzung der Software \"Sommerfest Quiz\" ist für kommerzielle Zwecke erlaubt. Der Quellcode bleibt Eigentum von René Buske und darf ohne vorherige schriftliche Zustimmung weder kopiert noch verbreitet, verändert oder öffentlich zugänglich gemacht werden. Die Software wird ohne Gewähr bereitgestellt. René Buske haftet nicht für Schäden, die aus der Nutzung entstehen. Proprietary License (English) Proprietary License - Sommerfest Quiz"}
{"id": "lizenz:0002", "source": "/workspace/sommerfest-quiz/content/lizenz.html", "title": "Lizenz", "chunk_index": 2, "word_count": 103, "text": "darf ohne vorherige schriftliche Zustimmung weder kopiert noch verbreitet, verändert oder öffentlich zugänglich gemacht werden. Die Software wird ohne Gewähr bereitgestellt. René Buske haftet nicht für Schäden, die aus der Nutzung entstehen. Proprietary License (English) Proprietary License - Sommerfest Quiz Copyright (c) 2025 René Buske All rights reserved. Commercial use of the Software is permitted. The source code remains the property of René Buske and may not be copied, distributed, modified or made publicly accessible without prior written permission. The Software is provided \"as is\" without warranty of any kind. René Buske shall not be liable for any damages arising from its use."}
