version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    environment:
      - CLIENT_MAX_BODY_SIZE=10m
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - webproxy

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webproxy

  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=adminer.${DOMAIN}
      - LETSENCRYPT_HOST=adminer.${DOMAIN}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - webproxy

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-letsencrypt
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme:/etc/acme.sh
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - webproxy

  slim:
    build: .
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./config/php.ini:/usr/local/etc/php/conf.d/uploads.ini
      - quizdata:/var/www/data
    environment:
      - VIRTUAL_HOST=${SLIM_VIRTUAL_HOST:-${DOMAIN}}
      - LETSENCRYPT_HOST=${SLIM_VIRTUAL_HOST:-${DOMAIN}}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - POSTGRES_DSN=${POSTGRES_DSN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - postgres
    # Use router.php so that Slim handles routes for non-existent static files
    command: php -S 0.0.0.0:8080 -t public public/router.php
    expose:
      - "8080"
    networks:
      - webproxy


networks:
  webproxy:
    external: false

volumes:
  quizdata:
  pgdata:
